Version 3.2 HI-TECH Software Intermediate Code
"3850 C:\Program Files\Microchip\xc8\v1.35\include\pic16f887.h
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"3848
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"21 i2c.h
[v _DS1307_Read `(uc ~T0 @X0 0 ef1`uc ]
"1216 C:\Program Files\Microchip\xc8\v1.35\include\pic16f887.h
[s S51 :1 `uc 1 :1 `uc 1 :4 `uc 1 :2 `uc 1 ]
[n S51 . ADON GO_nDONE CHS ADCS ]
"1222
[s S52 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S52 . . GO CHS0 CHS1 CHS2 CHS3 ADCS0 ADCS1 ]
"1232
[s S53 :1 `uc 1 :1 `uc 1 ]
[n S53 . . nDONE ]
"1236
[s S54 :1 `uc 1 :1 `uc 1 ]
[n S54 . . GO_DONE ]
"1215
[u S50 `S51 1 `S52 1 `S53 1 `S54 1 ]
[n S50 . . . . . ]
"1241
[v _ADCON0bits `VS50 ~T0 @X0 0 e@31 ]
"1204
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"2909
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"20 i2c.h
[v _DS1307_Write `(v ~T0 @X0 0 ef2`uc`uc ]
"15 lcd.h
[v _Lcd_Write_Char `(v ~T0 @X0 0 ef1`uc ]
"16
[v _Lcd_Write_String `(v ~T0 @X0 0 ef1`*uc ]
"13
[v _Lcd_Set_Cursor `(v ~T0 @X0 0 ef2`uc`uc ]
"3862 C:\Program Files\Microchip\xc8\v1.35\include\pic16f887.h
[v _RBIF `Vb ~T0 @X0 0 e@88 ]
"3846
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"3852
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"3854
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"453
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"463
[s S23 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S23 . . TMR0IF . TMR0IE ]
"452
[u S21 `S22 1 `S23 1 ]
[n S21 . . . ]
"470
[v _INTCONbits `VS21 ~T0 @X0 0 e@11 ]
"55
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
[p mainexit ]
"1562
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"343
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"1440
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"3314
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3375
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"4044
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"3320
[s S139 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S139 . ANS0 ANS1 ANS2 ANS3 ANS4 ANS5 ANS6 ANS7 ]
"3319
[u S138 `S139 1 ]
[n S138 . . ]
"3331
[v _ANSELbits `VS138 ~T0 @X0 0 e@392 ]
"2915
[v _ADCON1 `Vuc ~T0 @X0 0 e@159 ]
"1210
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"1316
[s S56 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S56 . PS PSA T0SE T0CS INTEDG nRBPU ]
"1324
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . PS0 PS1 PS2 ]
"1315
[u S55 `S56 1 `S57 1 ]
[n S55 . . . ]
"1330
[v _OPTION_REGbits `VS55 ~T0 @X0 0 e@129 ]
"2300
[s S96 :8 `uc 1 ]
[n S96 . WPUB ]
"2303
[s S97 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S97 . WPUB0 WPUB1 WPUB2 WPUB3 WPUB4 WPUB5 WPUB6 WPUB7 ]
"2299
[u S95 `S96 1 `S97 1 ]
[n S95 . . . ]
"2314
[v _WPUBbits `VS95 ~T0 @X0 0 e@149 ]
"2369
[s S99 :8 `uc 1 ]
[n S99 . IOCB ]
"2372
[s S100 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S100 . IOCB0 IOCB1 IOCB2 IOCB3 IOCB4 IOCB5 IOCB6 IOCB7 ]
"2368
[u S98 `S99 1 `S100 1 ]
[n S98 . . . ]
"2383
[v _IOCBbits `VS98 ~T0 @X0 0 e@150 ]
"3814
[v _PSA `Vb ~T0 @X0 0 e@1035 ]
"10 i2c.h
[v _i2c_Init `(v ~T0 @X0 0 ef ]
"14 lcd.h
[v _Lcd_Init `(v ~T0 @X0 0 ef ]
[v F1848 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\Program Files\Microchip\xc8\v1.35\include\pic.h
[v __delay `JF1848 ~T0 @X0 0 e ]
[p i __delay ]
"3896 C:\Program Files\Microchip\xc8\v1.35\include\pic16f887.h
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 25: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;lcd.h: 11: void Lcd_Port(char a);
[; ;lcd.h: 12: void Lcd_Cmd(char a);
[; ;lcd.h: 13: void Lcd_Set_Cursor(char a, char b);
[; ;lcd.h: 14: void Lcd_Init();
[; ;lcd.h: 15: void Lcd_Write_Char(char a);
[; ;lcd.h: 16: void Lcd_Write_String(char *a);
[; ;lcd.h: 17: void Lcd_Shift_Right();
[; ;lcd.h: 18: void Lcd_Shift_Left();
[; ;i2c.h: 10: void i2c_Init();
[; ;i2c.h: 11: void i2c_Start();
[; ;i2c.h: 12: void i2c_Restart();
[; ;i2c.h: 13: void i2c_Stop();
[; ;i2c.h: 14: void i2c_Ack();
[; ;i2c.h: 15: void i2c_Nack();
[; ;i2c.h: 16: void i2c_Write(unsigned char data);
[; ;i2c.h: 17: unsigned char i2c_Read();
[; ;i2c.h: 20: void DS1307_Write(unsigned char add, unsigned char dat);
[; ;i2c.h: 21: unsigned char DS1307_Read(unsigned char add);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16f887.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files\Microchip\xc8\v1.35\include\pic16f887.h
[; ;pic16f887.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f887.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f887.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f887.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 72: typedef union {
[; ;pic16f887.h: 73: struct {
[; ;pic16f887.h: 74: unsigned C :1;
[; ;pic16f887.h: 75: unsigned DC :1;
[; ;pic16f887.h: 76: unsigned Z :1;
[; ;pic16f887.h: 77: unsigned nPD :1;
[; ;pic16f887.h: 78: unsigned nTO :1;
[; ;pic16f887.h: 79: unsigned RP :2;
[; ;pic16f887.h: 80: unsigned IRP :1;
[; ;pic16f887.h: 81: };
[; ;pic16f887.h: 82: struct {
[; ;pic16f887.h: 83: unsigned :5;
[; ;pic16f887.h: 84: unsigned RP0 :1;
[; ;pic16f887.h: 85: unsigned RP1 :1;
[; ;pic16f887.h: 86: };
[; ;pic16f887.h: 87: struct {
[; ;pic16f887.h: 88: unsigned CARRY :1;
[; ;pic16f887.h: 89: };
[; ;pic16f887.h: 90: struct {
[; ;pic16f887.h: 91: unsigned :2;
[; ;pic16f887.h: 92: unsigned ZERO :1;
[; ;pic16f887.h: 93: };
[; ;pic16f887.h: 94: } STATUSbits_t;
[; ;pic16f887.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f887.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f887.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 165: typedef union {
[; ;pic16f887.h: 166: struct {
[; ;pic16f887.h: 167: unsigned RA0 :1;
[; ;pic16f887.h: 168: unsigned RA1 :1;
[; ;pic16f887.h: 169: unsigned RA2 :1;
[; ;pic16f887.h: 170: unsigned RA3 :1;
[; ;pic16f887.h: 171: unsigned RA4 :1;
[; ;pic16f887.h: 172: unsigned RA5 :1;
[; ;pic16f887.h: 173: unsigned RA6 :1;
[; ;pic16f887.h: 174: unsigned RA7 :1;
[; ;pic16f887.h: 175: };
[; ;pic16f887.h: 176: } PORTAbits_t;
[; ;pic16f887.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f887.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 226: typedef union {
[; ;pic16f887.h: 227: struct {
[; ;pic16f887.h: 228: unsigned RB0 :1;
[; ;pic16f887.h: 229: unsigned RB1 :1;
[; ;pic16f887.h: 230: unsigned RB2 :1;
[; ;pic16f887.h: 231: unsigned RB3 :1;
[; ;pic16f887.h: 232: unsigned RB4 :1;
[; ;pic16f887.h: 233: unsigned RB5 :1;
[; ;pic16f887.h: 234: unsigned RB6 :1;
[; ;pic16f887.h: 235: unsigned RB7 :1;
[; ;pic16f887.h: 236: };
[; ;pic16f887.h: 237: } PORTBbits_t;
[; ;pic16f887.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 282: extern volatile unsigned char PORTC @ 0x007;
"284
[; ;pic16f887.h: 284: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 287: typedef union {
[; ;pic16f887.h: 288: struct {
[; ;pic16f887.h: 289: unsigned RC0 :1;
[; ;pic16f887.h: 290: unsigned RC1 :1;
[; ;pic16f887.h: 291: unsigned RC2 :1;
[; ;pic16f887.h: 292: unsigned RC3 :1;
[; ;pic16f887.h: 293: unsigned RC4 :1;
[; ;pic16f887.h: 294: unsigned RC5 :1;
[; ;pic16f887.h: 295: unsigned RC6 :1;
[; ;pic16f887.h: 296: unsigned RC7 :1;
[; ;pic16f887.h: 297: };
[; ;pic16f887.h: 298: } PORTCbits_t;
[; ;pic16f887.h: 299: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 343: extern volatile unsigned char PORTD @ 0x008;
"345
[; ;pic16f887.h: 345: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 348: typedef union {
[; ;pic16f887.h: 349: struct {
[; ;pic16f887.h: 350: unsigned RD0 :1;
[; ;pic16f887.h: 351: unsigned RD1 :1;
[; ;pic16f887.h: 352: unsigned RD2 :1;
[; ;pic16f887.h: 353: unsigned RD3 :1;
[; ;pic16f887.h: 354: unsigned RD4 :1;
[; ;pic16f887.h: 355: unsigned RD5 :1;
[; ;pic16f887.h: 356: unsigned RD6 :1;
[; ;pic16f887.h: 357: unsigned RD7 :1;
[; ;pic16f887.h: 358: };
[; ;pic16f887.h: 359: } PORTDbits_t;
[; ;pic16f887.h: 360: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 404: extern volatile unsigned char PORTE @ 0x009;
"406
[; ;pic16f887.h: 406: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 409: typedef union {
[; ;pic16f887.h: 410: struct {
[; ;pic16f887.h: 411: unsigned RE0 :1;
[; ;pic16f887.h: 412: unsigned RE1 :1;
[; ;pic16f887.h: 413: unsigned RE2 :1;
[; ;pic16f887.h: 414: unsigned RE3 :1;
[; ;pic16f887.h: 415: };
[; ;pic16f887.h: 416: } PORTEbits_t;
[; ;pic16f887.h: 417: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 441: extern volatile unsigned char PCLATH @ 0x00A;
"443
[; ;pic16f887.h: 443: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 447: extern volatile unsigned char INTCON @ 0x00B;
"449
[; ;pic16f887.h: 449: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 452: typedef union {
[; ;pic16f887.h: 453: struct {
[; ;pic16f887.h: 454: unsigned RBIF :1;
[; ;pic16f887.h: 455: unsigned INTF :1;
[; ;pic16f887.h: 456: unsigned T0IF :1;
[; ;pic16f887.h: 457: unsigned RBIE :1;
[; ;pic16f887.h: 458: unsigned INTE :1;
[; ;pic16f887.h: 459: unsigned T0IE :1;
[; ;pic16f887.h: 460: unsigned PEIE :1;
[; ;pic16f887.h: 461: unsigned GIE :1;
[; ;pic16f887.h: 462: };
[; ;pic16f887.h: 463: struct {
[; ;pic16f887.h: 464: unsigned :2;
[; ;pic16f887.h: 465: unsigned TMR0IF :1;
[; ;pic16f887.h: 466: unsigned :2;
[; ;pic16f887.h: 467: unsigned TMR0IE :1;
[; ;pic16f887.h: 468: };
[; ;pic16f887.h: 469: } INTCONbits_t;
[; ;pic16f887.h: 470: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 524: extern volatile unsigned char PIR1 @ 0x00C;
"526
[; ;pic16f887.h: 526: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 529: typedef union {
[; ;pic16f887.h: 530: struct {
[; ;pic16f887.h: 531: unsigned TMR1IF :1;
[; ;pic16f887.h: 532: unsigned TMR2IF :1;
[; ;pic16f887.h: 533: unsigned CCP1IF :1;
[; ;pic16f887.h: 534: unsigned SSPIF :1;
[; ;pic16f887.h: 535: unsigned TXIF :1;
[; ;pic16f887.h: 536: unsigned RCIF :1;
[; ;pic16f887.h: 537: unsigned ADIF :1;
[; ;pic16f887.h: 538: };
[; ;pic16f887.h: 539: } PIR1bits_t;
[; ;pic16f887.h: 540: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 579: extern volatile unsigned char PIR2 @ 0x00D;
"581
[; ;pic16f887.h: 581: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 584: typedef union {
[; ;pic16f887.h: 585: struct {
[; ;pic16f887.h: 586: unsigned CCP2IF :1;
[; ;pic16f887.h: 587: unsigned :1;
[; ;pic16f887.h: 588: unsigned ULPWUIF :1;
[; ;pic16f887.h: 589: unsigned BCLIF :1;
[; ;pic16f887.h: 590: unsigned EEIF :1;
[; ;pic16f887.h: 591: unsigned C1IF :1;
[; ;pic16f887.h: 592: unsigned C2IF :1;
[; ;pic16f887.h: 593: unsigned OSFIF :1;
[; ;pic16f887.h: 594: };
[; ;pic16f887.h: 595: } PIR2bits_t;
[; ;pic16f887.h: 596: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 635: extern volatile unsigned short TMR1 @ 0x00E;
"637
[; ;pic16f887.h: 637: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 641: extern volatile unsigned char TMR1L @ 0x00E;
"643
[; ;pic16f887.h: 643: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 647: extern volatile unsigned char TMR1H @ 0x00F;
"649
[; ;pic16f887.h: 649: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f887.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 658: typedef union {
[; ;pic16f887.h: 659: struct {
[; ;pic16f887.h: 660: unsigned TMR1ON :1;
[; ;pic16f887.h: 661: unsigned TMR1CS :1;
[; ;pic16f887.h: 662: unsigned nT1SYNC :1;
[; ;pic16f887.h: 663: unsigned T1OSCEN :1;
[; ;pic16f887.h: 664: unsigned T1CKPS :2;
[; ;pic16f887.h: 665: unsigned TMR1GE :1;
[; ;pic16f887.h: 666: unsigned T1GINV :1;
[; ;pic16f887.h: 667: };
[; ;pic16f887.h: 668: struct {
[; ;pic16f887.h: 669: unsigned :2;
[; ;pic16f887.h: 670: unsigned T1INSYNC :1;
[; ;pic16f887.h: 671: unsigned :1;
[; ;pic16f887.h: 672: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 673: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 674: unsigned :1;
[; ;pic16f887.h: 675: unsigned T1GIV :1;
[; ;pic16f887.h: 676: };
[; ;pic16f887.h: 677: struct {
[; ;pic16f887.h: 678: unsigned :2;
[; ;pic16f887.h: 679: unsigned T1SYNC :1;
[; ;pic16f887.h: 680: };
[; ;pic16f887.h: 681: } T1CONbits_t;
[; ;pic16f887.h: 682: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 746: extern volatile unsigned char TMR2 @ 0x011;
"748
[; ;pic16f887.h: 748: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 752: extern volatile unsigned char T2CON @ 0x012;
"754
[; ;pic16f887.h: 754: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 757: typedef union {
[; ;pic16f887.h: 758: struct {
[; ;pic16f887.h: 759: unsigned T2CKPS :2;
[; ;pic16f887.h: 760: unsigned TMR2ON :1;
[; ;pic16f887.h: 761: unsigned TOUTPS :4;
[; ;pic16f887.h: 762: };
[; ;pic16f887.h: 763: struct {
[; ;pic16f887.h: 764: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 765: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 766: unsigned :1;
[; ;pic16f887.h: 767: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 768: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 769: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 770: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 771: };
[; ;pic16f887.h: 772: } T2CONbits_t;
[; ;pic16f887.h: 773: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 822: extern volatile unsigned char SSPBUF @ 0x013;
"824
[; ;pic16f887.h: 824: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 828: extern volatile unsigned char SSPCON @ 0x014;
"830
[; ;pic16f887.h: 830: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 833: typedef union {
[; ;pic16f887.h: 834: struct {
[; ;pic16f887.h: 835: unsigned SSPM :4;
[; ;pic16f887.h: 836: unsigned CKP :1;
[; ;pic16f887.h: 837: unsigned SSPEN :1;
[; ;pic16f887.h: 838: unsigned SSPOV :1;
[; ;pic16f887.h: 839: unsigned WCOL :1;
[; ;pic16f887.h: 840: };
[; ;pic16f887.h: 841: struct {
[; ;pic16f887.h: 842: unsigned SSPM0 :1;
[; ;pic16f887.h: 843: unsigned SSPM1 :1;
[; ;pic16f887.h: 844: unsigned SSPM2 :1;
[; ;pic16f887.h: 845: unsigned SSPM3 :1;
[; ;pic16f887.h: 846: };
[; ;pic16f887.h: 847: } SSPCONbits_t;
[; ;pic16f887.h: 848: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 897: extern volatile unsigned short CCPR1 @ 0x015;
"899
[; ;pic16f887.h: 899: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 903: extern volatile unsigned char CCPR1L @ 0x015;
"905
[; ;pic16f887.h: 905: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 909: extern volatile unsigned char CCPR1H @ 0x016;
"911
[; ;pic16f887.h: 911: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 915: extern volatile unsigned char CCP1CON @ 0x017;
"917
[; ;pic16f887.h: 917: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 920: typedef union {
[; ;pic16f887.h: 921: struct {
[; ;pic16f887.h: 922: unsigned CCP1M :4;
[; ;pic16f887.h: 923: unsigned DC1B :2;
[; ;pic16f887.h: 924: unsigned P1M :2;
[; ;pic16f887.h: 925: };
[; ;pic16f887.h: 926: struct {
[; ;pic16f887.h: 927: unsigned CCP1M0 :1;
[; ;pic16f887.h: 928: unsigned CCP1M1 :1;
[; ;pic16f887.h: 929: unsigned CCP1M2 :1;
[; ;pic16f887.h: 930: unsigned CCP1M3 :1;
[; ;pic16f887.h: 931: unsigned DC1B0 :1;
[; ;pic16f887.h: 932: unsigned DC1B1 :1;
[; ;pic16f887.h: 933: unsigned P1M0 :1;
[; ;pic16f887.h: 934: unsigned P1M1 :1;
[; ;pic16f887.h: 935: };
[; ;pic16f887.h: 936: struct {
[; ;pic16f887.h: 937: unsigned :4;
[; ;pic16f887.h: 938: unsigned CCP1Y :1;
[; ;pic16f887.h: 939: unsigned CCP1X :1;
[; ;pic16f887.h: 940: };
[; ;pic16f887.h: 941: } CCP1CONbits_t;
[; ;pic16f887.h: 942: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1011: extern volatile unsigned char RCSTA @ 0x018;
"1013
[; ;pic16f887.h: 1013: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1016: typedef union {
[; ;pic16f887.h: 1017: struct {
[; ;pic16f887.h: 1018: unsigned RX9D :1;
[; ;pic16f887.h: 1019: unsigned OERR :1;
[; ;pic16f887.h: 1020: unsigned FERR :1;
[; ;pic16f887.h: 1021: unsigned ADDEN :1;
[; ;pic16f887.h: 1022: unsigned CREN :1;
[; ;pic16f887.h: 1023: unsigned SREN :1;
[; ;pic16f887.h: 1024: unsigned RX9 :1;
[; ;pic16f887.h: 1025: unsigned SPEN :1;
[; ;pic16f887.h: 1026: };
[; ;pic16f887.h: 1027: struct {
[; ;pic16f887.h: 1028: unsigned RCD8 :1;
[; ;pic16f887.h: 1029: unsigned :5;
[; ;pic16f887.h: 1030: unsigned RC9 :1;
[; ;pic16f887.h: 1031: };
[; ;pic16f887.h: 1032: struct {
[; ;pic16f887.h: 1033: unsigned :6;
[; ;pic16f887.h: 1034: unsigned nRC8 :1;
[; ;pic16f887.h: 1035: };
[; ;pic16f887.h: 1036: struct {
[; ;pic16f887.h: 1037: unsigned :6;
[; ;pic16f887.h: 1038: unsigned RC8_9 :1;
[; ;pic16f887.h: 1039: };
[; ;pic16f887.h: 1040: } RCSTAbits_t;
[; ;pic16f887.h: 1041: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1105: extern volatile unsigned char TXREG @ 0x019;
"1107
[; ;pic16f887.h: 1107: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1111: extern volatile unsigned char RCREG @ 0x01A;
"1113
[; ;pic16f887.h: 1113: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1117: extern volatile unsigned short CCPR2 @ 0x01B;
"1119
[; ;pic16f887.h: 1119: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1123: extern volatile unsigned char CCPR2L @ 0x01B;
"1125
[; ;pic16f887.h: 1125: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1129: extern volatile unsigned char CCPR2H @ 0x01C;
"1131
[; ;pic16f887.h: 1131: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1135: extern volatile unsigned char CCP2CON @ 0x01D;
"1137
[; ;pic16f887.h: 1137: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1140: typedef union {
[; ;pic16f887.h: 1141: struct {
[; ;pic16f887.h: 1142: unsigned CCP2M :4;
[; ;pic16f887.h: 1143: unsigned DC2B0 :1;
[; ;pic16f887.h: 1144: unsigned DC2B1 :1;
[; ;pic16f887.h: 1145: };
[; ;pic16f887.h: 1146: struct {
[; ;pic16f887.h: 1147: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1148: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1149: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1150: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1151: unsigned CCP2Y :1;
[; ;pic16f887.h: 1152: unsigned CCP2X :1;
[; ;pic16f887.h: 1153: };
[; ;pic16f887.h: 1154: } CCP2CONbits_t;
[; ;pic16f887.h: 1155: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1204: extern volatile unsigned char ADRESH @ 0x01E;
"1206
[; ;pic16f887.h: 1206: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1210: extern volatile unsigned char ADCON0 @ 0x01F;
"1212
[; ;pic16f887.h: 1212: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1215: typedef union {
[; ;pic16f887.h: 1216: struct {
[; ;pic16f887.h: 1217: unsigned ADON :1;
[; ;pic16f887.h: 1218: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1219: unsigned CHS :4;
[; ;pic16f887.h: 1220: unsigned ADCS :2;
[; ;pic16f887.h: 1221: };
[; ;pic16f887.h: 1222: struct {
[; ;pic16f887.h: 1223: unsigned :1;
[; ;pic16f887.h: 1224: unsigned GO :1;
[; ;pic16f887.h: 1225: unsigned CHS0 :1;
[; ;pic16f887.h: 1226: unsigned CHS1 :1;
[; ;pic16f887.h: 1227: unsigned CHS2 :1;
[; ;pic16f887.h: 1228: unsigned CHS3 :1;
[; ;pic16f887.h: 1229: unsigned ADCS0 :1;
[; ;pic16f887.h: 1230: unsigned ADCS1 :1;
[; ;pic16f887.h: 1231: };
[; ;pic16f887.h: 1232: struct {
[; ;pic16f887.h: 1233: unsigned :1;
[; ;pic16f887.h: 1234: unsigned nDONE :1;
[; ;pic16f887.h: 1235: };
[; ;pic16f887.h: 1236: struct {
[; ;pic16f887.h: 1237: unsigned :1;
[; ;pic16f887.h: 1238: unsigned GO_DONE :1;
[; ;pic16f887.h: 1239: };
[; ;pic16f887.h: 1240: } ADCON0bits_t;
[; ;pic16f887.h: 1241: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1310: extern volatile unsigned char OPTION_REG @ 0x081;
"1312
[; ;pic16f887.h: 1312: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1315: typedef union {
[; ;pic16f887.h: 1316: struct {
[; ;pic16f887.h: 1317: unsigned PS :3;
[; ;pic16f887.h: 1318: unsigned PSA :1;
[; ;pic16f887.h: 1319: unsigned T0SE :1;
[; ;pic16f887.h: 1320: unsigned T0CS :1;
[; ;pic16f887.h: 1321: unsigned INTEDG :1;
[; ;pic16f887.h: 1322: unsigned nRBPU :1;
[; ;pic16f887.h: 1323: };
[; ;pic16f887.h: 1324: struct {
[; ;pic16f887.h: 1325: unsigned PS0 :1;
[; ;pic16f887.h: 1326: unsigned PS1 :1;
[; ;pic16f887.h: 1327: unsigned PS2 :1;
[; ;pic16f887.h: 1328: };
[; ;pic16f887.h: 1329: } OPTION_REGbits_t;
[; ;pic16f887.h: 1330: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1379: extern volatile unsigned char TRISA @ 0x085;
"1381
[; ;pic16f887.h: 1381: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1384: typedef union {
[; ;pic16f887.h: 1385: struct {
[; ;pic16f887.h: 1386: unsigned TRISA0 :1;
[; ;pic16f887.h: 1387: unsigned TRISA1 :1;
[; ;pic16f887.h: 1388: unsigned TRISA2 :1;
[; ;pic16f887.h: 1389: unsigned TRISA3 :1;
[; ;pic16f887.h: 1390: unsigned TRISA4 :1;
[; ;pic16f887.h: 1391: unsigned TRISA5 :1;
[; ;pic16f887.h: 1392: unsigned TRISA6 :1;
[; ;pic16f887.h: 1393: unsigned TRISA7 :1;
[; ;pic16f887.h: 1394: };
[; ;pic16f887.h: 1395: } TRISAbits_t;
[; ;pic16f887.h: 1396: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1440: extern volatile unsigned char TRISB @ 0x086;
"1442
[; ;pic16f887.h: 1442: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1445: typedef union {
[; ;pic16f887.h: 1446: struct {
[; ;pic16f887.h: 1447: unsigned TRISB0 :1;
[; ;pic16f887.h: 1448: unsigned TRISB1 :1;
[; ;pic16f887.h: 1449: unsigned TRISB2 :1;
[; ;pic16f887.h: 1450: unsigned TRISB3 :1;
[; ;pic16f887.h: 1451: unsigned TRISB4 :1;
[; ;pic16f887.h: 1452: unsigned TRISB5 :1;
[; ;pic16f887.h: 1453: unsigned TRISB6 :1;
[; ;pic16f887.h: 1454: unsigned TRISB7 :1;
[; ;pic16f887.h: 1455: };
[; ;pic16f887.h: 1456: } TRISBbits_t;
[; ;pic16f887.h: 1457: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1501: extern volatile unsigned char TRISC @ 0x087;
"1503
[; ;pic16f887.h: 1503: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1506: typedef union {
[; ;pic16f887.h: 1507: struct {
[; ;pic16f887.h: 1508: unsigned TRISC0 :1;
[; ;pic16f887.h: 1509: unsigned TRISC1 :1;
[; ;pic16f887.h: 1510: unsigned TRISC2 :1;
[; ;pic16f887.h: 1511: unsigned TRISC3 :1;
[; ;pic16f887.h: 1512: unsigned TRISC4 :1;
[; ;pic16f887.h: 1513: unsigned TRISC5 :1;
[; ;pic16f887.h: 1514: unsigned TRISC6 :1;
[; ;pic16f887.h: 1515: unsigned TRISC7 :1;
[; ;pic16f887.h: 1516: };
[; ;pic16f887.h: 1517: } TRISCbits_t;
[; ;pic16f887.h: 1518: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1562: extern volatile unsigned char TRISD @ 0x088;
"1564
[; ;pic16f887.h: 1564: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1567: typedef union {
[; ;pic16f887.h: 1568: struct {
[; ;pic16f887.h: 1569: unsigned TRISD0 :1;
[; ;pic16f887.h: 1570: unsigned TRISD1 :1;
[; ;pic16f887.h: 1571: unsigned TRISD2 :1;
[; ;pic16f887.h: 1572: unsigned TRISD3 :1;
[; ;pic16f887.h: 1573: unsigned TRISD4 :1;
[; ;pic16f887.h: 1574: unsigned TRISD5 :1;
[; ;pic16f887.h: 1575: unsigned TRISD6 :1;
[; ;pic16f887.h: 1576: unsigned TRISD7 :1;
[; ;pic16f887.h: 1577: };
[; ;pic16f887.h: 1578: } TRISDbits_t;
[; ;pic16f887.h: 1579: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1623: extern volatile unsigned char TRISE @ 0x089;
"1625
[; ;pic16f887.h: 1625: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1628: typedef union {
[; ;pic16f887.h: 1629: struct {
[; ;pic16f887.h: 1630: unsigned TRISE0 :1;
[; ;pic16f887.h: 1631: unsigned TRISE1 :1;
[; ;pic16f887.h: 1632: unsigned TRISE2 :1;
[; ;pic16f887.h: 1633: unsigned TRISE3 :1;
[; ;pic16f887.h: 1634: };
[; ;pic16f887.h: 1635: } TRISEbits_t;
[; ;pic16f887.h: 1636: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1660: extern volatile unsigned char PIE1 @ 0x08C;
"1662
[; ;pic16f887.h: 1662: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1665: typedef union {
[; ;pic16f887.h: 1666: struct {
[; ;pic16f887.h: 1667: unsigned TMR1IE :1;
[; ;pic16f887.h: 1668: unsigned TMR2IE :1;
[; ;pic16f887.h: 1669: unsigned CCP1IE :1;
[; ;pic16f887.h: 1670: unsigned SSPIE :1;
[; ;pic16f887.h: 1671: unsigned TXIE :1;
[; ;pic16f887.h: 1672: unsigned RCIE :1;
[; ;pic16f887.h: 1673: unsigned ADIE :1;
[; ;pic16f887.h: 1674: };
[; ;pic16f887.h: 1675: } PIE1bits_t;
[; ;pic16f887.h: 1676: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1715: extern volatile unsigned char PIE2 @ 0x08D;
"1717
[; ;pic16f887.h: 1717: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1720: typedef union {
[; ;pic16f887.h: 1721: struct {
[; ;pic16f887.h: 1722: unsigned CCP2IE :1;
[; ;pic16f887.h: 1723: unsigned :1;
[; ;pic16f887.h: 1724: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1725: unsigned BCLIE :1;
[; ;pic16f887.h: 1726: unsigned EEIE :1;
[; ;pic16f887.h: 1727: unsigned C1IE :1;
[; ;pic16f887.h: 1728: unsigned C2IE :1;
[; ;pic16f887.h: 1729: unsigned OSFIE :1;
[; ;pic16f887.h: 1730: };
[; ;pic16f887.h: 1731: } PIE2bits_t;
[; ;pic16f887.h: 1732: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1771: extern volatile unsigned char PCON @ 0x08E;
"1773
[; ;pic16f887.h: 1773: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1776: typedef union {
[; ;pic16f887.h: 1777: struct {
[; ;pic16f887.h: 1778: unsigned nBOR :1;
[; ;pic16f887.h: 1779: unsigned nPOR :1;
[; ;pic16f887.h: 1780: unsigned :2;
[; ;pic16f887.h: 1781: unsigned SBOREN :1;
[; ;pic16f887.h: 1782: unsigned ULPWUE :1;
[; ;pic16f887.h: 1783: };
[; ;pic16f887.h: 1784: struct {
[; ;pic16f887.h: 1785: unsigned nBO :1;
[; ;pic16f887.h: 1786: };
[; ;pic16f887.h: 1787: } PCONbits_t;
[; ;pic16f887.h: 1788: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1817: extern volatile unsigned char OSCCON @ 0x08F;
"1819
[; ;pic16f887.h: 1819: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1822: typedef union {
[; ;pic16f887.h: 1823: struct {
[; ;pic16f887.h: 1824: unsigned SCS :1;
[; ;pic16f887.h: 1825: unsigned LTS :1;
[; ;pic16f887.h: 1826: unsigned HTS :1;
[; ;pic16f887.h: 1827: unsigned OSTS :1;
[; ;pic16f887.h: 1828: unsigned IRCF :3;
[; ;pic16f887.h: 1829: };
[; ;pic16f887.h: 1830: struct {
[; ;pic16f887.h: 1831: unsigned :4;
[; ;pic16f887.h: 1832: unsigned IRCF0 :1;
[; ;pic16f887.h: 1833: unsigned IRCF1 :1;
[; ;pic16f887.h: 1834: unsigned IRCF2 :1;
[; ;pic16f887.h: 1835: };
[; ;pic16f887.h: 1836: } OSCCONbits_t;
[; ;pic16f887.h: 1837: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1881: extern volatile unsigned char OSCTUNE @ 0x090;
"1883
[; ;pic16f887.h: 1883: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1886: typedef union {
[; ;pic16f887.h: 1887: struct {
[; ;pic16f887.h: 1888: unsigned TUN :5;
[; ;pic16f887.h: 1889: };
[; ;pic16f887.h: 1890: struct {
[; ;pic16f887.h: 1891: unsigned TUN0 :1;
[; ;pic16f887.h: 1892: unsigned TUN1 :1;
[; ;pic16f887.h: 1893: unsigned TUN2 :1;
[; ;pic16f887.h: 1894: unsigned TUN3 :1;
[; ;pic16f887.h: 1895: unsigned TUN4 :1;
[; ;pic16f887.h: 1896: };
[; ;pic16f887.h: 1897: } OSCTUNEbits_t;
[; ;pic16f887.h: 1898: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1932: extern volatile unsigned char SSPCON2 @ 0x091;
"1934
[; ;pic16f887.h: 1934: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1937: typedef union {
[; ;pic16f887.h: 1938: struct {
[; ;pic16f887.h: 1939: unsigned SEN :1;
[; ;pic16f887.h: 1940: unsigned RSEN :1;
[; ;pic16f887.h: 1941: unsigned PEN :1;
[; ;pic16f887.h: 1942: unsigned RCEN :1;
[; ;pic16f887.h: 1943: unsigned ACKEN :1;
[; ;pic16f887.h: 1944: unsigned ACKDT :1;
[; ;pic16f887.h: 1945: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1946: unsigned GCEN :1;
[; ;pic16f887.h: 1947: };
[; ;pic16f887.h: 1948: } SSPCON2bits_t;
[; ;pic16f887.h: 1949: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 1993: extern volatile unsigned char PR2 @ 0x092;
"1995
[; ;pic16f887.h: 1995: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 1999: extern volatile unsigned char SSPADD @ 0x093;
"2001
[; ;pic16f887.h: 2001: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2005: extern volatile unsigned char SSPMSK @ 0x093;
"2007
[; ;pic16f887.h: 2007: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2010: extern volatile unsigned char MSK @ 0x093;
"2012
[; ;pic16f887.h: 2012: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2015: typedef union {
[; ;pic16f887.h: 2016: struct {
[; ;pic16f887.h: 2017: unsigned MSK0 :1;
[; ;pic16f887.h: 2018: unsigned MSK1 :1;
[; ;pic16f887.h: 2019: unsigned MSK2 :1;
[; ;pic16f887.h: 2020: unsigned MSK3 :1;
[; ;pic16f887.h: 2021: unsigned MSK4 :1;
[; ;pic16f887.h: 2022: unsigned MSK5 :1;
[; ;pic16f887.h: 2023: unsigned MSK6 :1;
[; ;pic16f887.h: 2024: unsigned MSK7 :1;
[; ;pic16f887.h: 2025: };
[; ;pic16f887.h: 2026: } SSPMSKbits_t;
[; ;pic16f887.h: 2027: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2070: typedef union {
[; ;pic16f887.h: 2071: struct {
[; ;pic16f887.h: 2072: unsigned MSK0 :1;
[; ;pic16f887.h: 2073: unsigned MSK1 :1;
[; ;pic16f887.h: 2074: unsigned MSK2 :1;
[; ;pic16f887.h: 2075: unsigned MSK3 :1;
[; ;pic16f887.h: 2076: unsigned MSK4 :1;
[; ;pic16f887.h: 2077: unsigned MSK5 :1;
[; ;pic16f887.h: 2078: unsigned MSK6 :1;
[; ;pic16f887.h: 2079: unsigned MSK7 :1;
[; ;pic16f887.h: 2080: };
[; ;pic16f887.h: 2081: } MSKbits_t;
[; ;pic16f887.h: 2082: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2126: extern volatile unsigned char SSPSTAT @ 0x094;
"2128
[; ;pic16f887.h: 2128: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2131: typedef union {
[; ;pic16f887.h: 2132: struct {
[; ;pic16f887.h: 2133: unsigned BF :1;
[; ;pic16f887.h: 2134: unsigned UA :1;
[; ;pic16f887.h: 2135: unsigned R_nW :1;
[; ;pic16f887.h: 2136: unsigned S :1;
[; ;pic16f887.h: 2137: unsigned P :1;
[; ;pic16f887.h: 2138: unsigned D_nA :1;
[; ;pic16f887.h: 2139: unsigned CKE :1;
[; ;pic16f887.h: 2140: unsigned SMP :1;
[; ;pic16f887.h: 2141: };
[; ;pic16f887.h: 2142: struct {
[; ;pic16f887.h: 2143: unsigned :2;
[; ;pic16f887.h: 2144: unsigned R :1;
[; ;pic16f887.h: 2145: unsigned :2;
[; ;pic16f887.h: 2146: unsigned D :1;
[; ;pic16f887.h: 2147: };
[; ;pic16f887.h: 2148: struct {
[; ;pic16f887.h: 2149: unsigned :2;
[; ;pic16f887.h: 2150: unsigned I2C_READ :1;
[; ;pic16f887.h: 2151: unsigned I2C_START :1;
[; ;pic16f887.h: 2152: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2153: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2154: };
[; ;pic16f887.h: 2155: struct {
[; ;pic16f887.h: 2156: unsigned :2;
[; ;pic16f887.h: 2157: unsigned nW :1;
[; ;pic16f887.h: 2158: unsigned :2;
[; ;pic16f887.h: 2159: unsigned nA :1;
[; ;pic16f887.h: 2160: };
[; ;pic16f887.h: 2161: struct {
[; ;pic16f887.h: 2162: unsigned :2;
[; ;pic16f887.h: 2163: unsigned nWRITE :1;
[; ;pic16f887.h: 2164: unsigned :2;
[; ;pic16f887.h: 2165: unsigned nADDRESS :1;
[; ;pic16f887.h: 2166: };
[; ;pic16f887.h: 2167: struct {
[; ;pic16f887.h: 2168: unsigned :2;
[; ;pic16f887.h: 2169: unsigned R_W :1;
[; ;pic16f887.h: 2170: unsigned :2;
[; ;pic16f887.h: 2171: unsigned D_A :1;
[; ;pic16f887.h: 2172: };
[; ;pic16f887.h: 2173: struct {
[; ;pic16f887.h: 2174: unsigned :2;
[; ;pic16f887.h: 2175: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2176: unsigned :2;
[; ;pic16f887.h: 2177: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2178: };
[; ;pic16f887.h: 2179: } SSPSTATbits_t;
[; ;pic16f887.h: 2180: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2294: extern volatile unsigned char WPUB @ 0x095;
"2296
[; ;pic16f887.h: 2296: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2299: typedef union {
[; ;pic16f887.h: 2300: struct {
[; ;pic16f887.h: 2301: unsigned WPUB :8;
[; ;pic16f887.h: 2302: };
[; ;pic16f887.h: 2303: struct {
[; ;pic16f887.h: 2304: unsigned WPUB0 :1;
[; ;pic16f887.h: 2305: unsigned WPUB1 :1;
[; ;pic16f887.h: 2306: unsigned WPUB2 :1;
[; ;pic16f887.h: 2307: unsigned WPUB3 :1;
[; ;pic16f887.h: 2308: unsigned WPUB4 :1;
[; ;pic16f887.h: 2309: unsigned WPUB5 :1;
[; ;pic16f887.h: 2310: unsigned WPUB6 :1;
[; ;pic16f887.h: 2311: unsigned WPUB7 :1;
[; ;pic16f887.h: 2312: };
[; ;pic16f887.h: 2313: } WPUBbits_t;
[; ;pic16f887.h: 2314: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2363: extern volatile unsigned char IOCB @ 0x096;
"2365
[; ;pic16f887.h: 2365: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2368: typedef union {
[; ;pic16f887.h: 2369: struct {
[; ;pic16f887.h: 2370: unsigned IOCB :8;
[; ;pic16f887.h: 2371: };
[; ;pic16f887.h: 2372: struct {
[; ;pic16f887.h: 2373: unsigned IOCB0 :1;
[; ;pic16f887.h: 2374: unsigned IOCB1 :1;
[; ;pic16f887.h: 2375: unsigned IOCB2 :1;
[; ;pic16f887.h: 2376: unsigned IOCB3 :1;
[; ;pic16f887.h: 2377: unsigned IOCB4 :1;
[; ;pic16f887.h: 2378: unsigned IOCB5 :1;
[; ;pic16f887.h: 2379: unsigned IOCB6 :1;
[; ;pic16f887.h: 2380: unsigned IOCB7 :1;
[; ;pic16f887.h: 2381: };
[; ;pic16f887.h: 2382: } IOCBbits_t;
[; ;pic16f887.h: 2383: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2432: extern volatile unsigned char VRCON @ 0x097;
"2434
[; ;pic16f887.h: 2434: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2437: typedef union {
[; ;pic16f887.h: 2438: struct {
[; ;pic16f887.h: 2439: unsigned VR :4;
[; ;pic16f887.h: 2440: unsigned VRSS :1;
[; ;pic16f887.h: 2441: unsigned VRR :1;
[; ;pic16f887.h: 2442: unsigned VROE :1;
[; ;pic16f887.h: 2443: unsigned VREN :1;
[; ;pic16f887.h: 2444: };
[; ;pic16f887.h: 2445: struct {
[; ;pic16f887.h: 2446: unsigned VR0 :1;
[; ;pic16f887.h: 2447: unsigned VR1 :1;
[; ;pic16f887.h: 2448: unsigned VR2 :1;
[; ;pic16f887.h: 2449: unsigned VR3 :1;
[; ;pic16f887.h: 2450: };
[; ;pic16f887.h: 2451: } VRCONbits_t;
[; ;pic16f887.h: 2452: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2501: extern volatile unsigned char TXSTA @ 0x098;
"2503
[; ;pic16f887.h: 2503: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2506: typedef union {
[; ;pic16f887.h: 2507: struct {
[; ;pic16f887.h: 2508: unsigned TX9D :1;
[; ;pic16f887.h: 2509: unsigned TRMT :1;
[; ;pic16f887.h: 2510: unsigned BRGH :1;
[; ;pic16f887.h: 2511: unsigned SENDB :1;
[; ;pic16f887.h: 2512: unsigned SYNC :1;
[; ;pic16f887.h: 2513: unsigned TXEN :1;
[; ;pic16f887.h: 2514: unsigned TX9 :1;
[; ;pic16f887.h: 2515: unsigned CSRC :1;
[; ;pic16f887.h: 2516: };
[; ;pic16f887.h: 2517: struct {
[; ;pic16f887.h: 2518: unsigned TXD8 :1;
[; ;pic16f887.h: 2519: unsigned :5;
[; ;pic16f887.h: 2520: unsigned nTX8 :1;
[; ;pic16f887.h: 2521: };
[; ;pic16f887.h: 2522: struct {
[; ;pic16f887.h: 2523: unsigned :6;
[; ;pic16f887.h: 2524: unsigned TX8_9 :1;
[; ;pic16f887.h: 2525: };
[; ;pic16f887.h: 2526: } TXSTAbits_t;
[; ;pic16f887.h: 2527: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2586: extern volatile unsigned char SPBRG @ 0x099;
"2588
[; ;pic16f887.h: 2588: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2591: typedef union {
[; ;pic16f887.h: 2592: struct {
[; ;pic16f887.h: 2593: unsigned BRG0 :1;
[; ;pic16f887.h: 2594: unsigned BRG1 :1;
[; ;pic16f887.h: 2595: unsigned BRG2 :1;
[; ;pic16f887.h: 2596: unsigned BRG3 :1;
[; ;pic16f887.h: 2597: unsigned BRG4 :1;
[; ;pic16f887.h: 2598: unsigned BRG5 :1;
[; ;pic16f887.h: 2599: unsigned BRG6 :1;
[; ;pic16f887.h: 2600: unsigned BRG7 :1;
[; ;pic16f887.h: 2601: };
[; ;pic16f887.h: 2602: } SPBRGbits_t;
[; ;pic16f887.h: 2603: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2647: extern volatile unsigned char SPBRGH @ 0x09A;
"2649
[; ;pic16f887.h: 2649: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2652: typedef union {
[; ;pic16f887.h: 2653: struct {
[; ;pic16f887.h: 2654: unsigned SPBRGH :8;
[; ;pic16f887.h: 2655: };
[; ;pic16f887.h: 2656: struct {
[; ;pic16f887.h: 2657: unsigned BRG8 :1;
[; ;pic16f887.h: 2658: unsigned BRG9 :1;
[; ;pic16f887.h: 2659: unsigned BRG10 :1;
[; ;pic16f887.h: 2660: unsigned BRG11 :1;
[; ;pic16f887.h: 2661: unsigned BRG12 :1;
[; ;pic16f887.h: 2662: unsigned BRG13 :1;
[; ;pic16f887.h: 2663: unsigned BRG14 :1;
[; ;pic16f887.h: 2664: unsigned BRG15 :1;
[; ;pic16f887.h: 2665: };
[; ;pic16f887.h: 2666: } SPBRGHbits_t;
[; ;pic16f887.h: 2667: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2716: extern volatile unsigned char PWM1CON @ 0x09B;
"2718
[; ;pic16f887.h: 2718: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2721: typedef union {
[; ;pic16f887.h: 2722: struct {
[; ;pic16f887.h: 2723: unsigned PDC :7;
[; ;pic16f887.h: 2724: unsigned PRSEN :1;
[; ;pic16f887.h: 2725: };
[; ;pic16f887.h: 2726: struct {
[; ;pic16f887.h: 2727: unsigned PDC0 :1;
[; ;pic16f887.h: 2728: unsigned PDC1 :1;
[; ;pic16f887.h: 2729: unsigned PDC2 :1;
[; ;pic16f887.h: 2730: unsigned PDC3 :1;
[; ;pic16f887.h: 2731: unsigned PDC4 :1;
[; ;pic16f887.h: 2732: unsigned PDC5 :1;
[; ;pic16f887.h: 2733: unsigned PDC6 :1;
[; ;pic16f887.h: 2734: };
[; ;pic16f887.h: 2735: } PWM1CONbits_t;
[; ;pic16f887.h: 2736: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2785: extern volatile unsigned char ECCPAS @ 0x09C;
"2787
[; ;pic16f887.h: 2787: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2790: typedef union {
[; ;pic16f887.h: 2791: struct {
[; ;pic16f887.h: 2792: unsigned PSSBD :2;
[; ;pic16f887.h: 2793: unsigned PSSAC :2;
[; ;pic16f887.h: 2794: unsigned ECCPAS :3;
[; ;pic16f887.h: 2795: unsigned ECCPASE :1;
[; ;pic16f887.h: 2796: };
[; ;pic16f887.h: 2797: struct {
[; ;pic16f887.h: 2798: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2799: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2800: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2801: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2802: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2803: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2804: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2805: };
[; ;pic16f887.h: 2806: } ECCPASbits_t;
[; ;pic16f887.h: 2807: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2866: extern volatile unsigned char PSTRCON @ 0x09D;
"2868
[; ;pic16f887.h: 2868: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2871: typedef union {
[; ;pic16f887.h: 2872: struct {
[; ;pic16f887.h: 2873: unsigned STRA :1;
[; ;pic16f887.h: 2874: unsigned STRB :1;
[; ;pic16f887.h: 2875: unsigned STRC :1;
[; ;pic16f887.h: 2876: unsigned STRD :1;
[; ;pic16f887.h: 2877: unsigned STRSYNC :1;
[; ;pic16f887.h: 2878: };
[; ;pic16f887.h: 2879: } PSTRCONbits_t;
[; ;pic16f887.h: 2880: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2909: extern volatile unsigned char ADRESL @ 0x09E;
"2911
[; ;pic16f887.h: 2911: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2915: extern volatile unsigned char ADCON1 @ 0x09F;
"2917
[; ;pic16f887.h: 2917: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2920: typedef union {
[; ;pic16f887.h: 2921: struct {
[; ;pic16f887.h: 2922: unsigned :4;
[; ;pic16f887.h: 2923: unsigned VCFG0 :1;
[; ;pic16f887.h: 2924: unsigned VCFG1 :1;
[; ;pic16f887.h: 2925: unsigned :1;
[; ;pic16f887.h: 2926: unsigned ADFM :1;
[; ;pic16f887.h: 2927: };
[; ;pic16f887.h: 2928: } ADCON1bits_t;
[; ;pic16f887.h: 2929: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 2948: extern volatile unsigned char WDTCON @ 0x105;
"2950
[; ;pic16f887.h: 2950: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 2953: typedef union {
[; ;pic16f887.h: 2954: struct {
[; ;pic16f887.h: 2955: unsigned SWDTEN :1;
[; ;pic16f887.h: 2956: unsigned WDTPS :4;
[; ;pic16f887.h: 2957: };
[; ;pic16f887.h: 2958: struct {
[; ;pic16f887.h: 2959: unsigned :1;
[; ;pic16f887.h: 2960: unsigned WDTPS0 :1;
[; ;pic16f887.h: 2961: unsigned WDTPS1 :1;
[; ;pic16f887.h: 2962: unsigned WDTPS2 :1;
[; ;pic16f887.h: 2963: unsigned WDTPS3 :1;
[; ;pic16f887.h: 2964: };
[; ;pic16f887.h: 2965: } WDTCONbits_t;
[; ;pic16f887.h: 2966: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 3000: extern volatile unsigned char CM1CON0 @ 0x107;
"3002
[; ;pic16f887.h: 3002: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3005: typedef union {
[; ;pic16f887.h: 3006: struct {
[; ;pic16f887.h: 3007: unsigned C1CH :2;
[; ;pic16f887.h: 3008: unsigned C1R :1;
[; ;pic16f887.h: 3009: unsigned :1;
[; ;pic16f887.h: 3010: unsigned C1POL :1;
[; ;pic16f887.h: 3011: unsigned C1OE :1;
[; ;pic16f887.h: 3012: unsigned C1OUT :1;
[; ;pic16f887.h: 3013: unsigned C1ON :1;
[; ;pic16f887.h: 3014: };
[; ;pic16f887.h: 3015: struct {
[; ;pic16f887.h: 3016: unsigned C1CH0 :1;
[; ;pic16f887.h: 3017: unsigned C1CH1 :1;
[; ;pic16f887.h: 3018: };
[; ;pic16f887.h: 3019: } CM1CON0bits_t;
[; ;pic16f887.h: 3020: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3064: extern volatile unsigned char CM2CON0 @ 0x108;
"3066
[; ;pic16f887.h: 3066: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3069: typedef union {
[; ;pic16f887.h: 3070: struct {
[; ;pic16f887.h: 3071: unsigned C2CH :2;
[; ;pic16f887.h: 3072: unsigned C2R :1;
[; ;pic16f887.h: 3073: unsigned :1;
[; ;pic16f887.h: 3074: unsigned C2POL :1;
[; ;pic16f887.h: 3075: unsigned C2OE :1;
[; ;pic16f887.h: 3076: unsigned C2OUT :1;
[; ;pic16f887.h: 3077: unsigned C2ON :1;
[; ;pic16f887.h: 3078: };
[; ;pic16f887.h: 3079: struct {
[; ;pic16f887.h: 3080: unsigned C2CH0 :1;
[; ;pic16f887.h: 3081: unsigned C2CH1 :1;
[; ;pic16f887.h: 3082: };
[; ;pic16f887.h: 3083: } CM2CON0bits_t;
[; ;pic16f887.h: 3084: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3128: extern volatile unsigned char CM2CON1 @ 0x109;
"3130
[; ;pic16f887.h: 3130: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3133: typedef union {
[; ;pic16f887.h: 3134: struct {
[; ;pic16f887.h: 3135: unsigned C2SYNC :1;
[; ;pic16f887.h: 3136: unsigned T1GSS :1;
[; ;pic16f887.h: 3137: unsigned :2;
[; ;pic16f887.h: 3138: unsigned C2RSEL :1;
[; ;pic16f887.h: 3139: unsigned C1RSEL :1;
[; ;pic16f887.h: 3140: unsigned MC2OUT :1;
[; ;pic16f887.h: 3141: unsigned MC1OUT :1;
[; ;pic16f887.h: 3142: };
[; ;pic16f887.h: 3143: } CM2CON1bits_t;
[; ;pic16f887.h: 3144: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3178: extern volatile unsigned char EEDATA @ 0x10C;
"3180
[; ;pic16f887.h: 3180: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3183: extern volatile unsigned char EEDAT @ 0x10C;
"3185
[; ;pic16f887.h: 3185: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3189: extern volatile unsigned char EEADR @ 0x10D;
"3191
[; ;pic16f887.h: 3191: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3195: extern volatile unsigned char EEDATH @ 0x10E;
"3197
[; ;pic16f887.h: 3197: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3201: extern volatile unsigned char EEADRH @ 0x10F;
"3203
[; ;pic16f887.h: 3203: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3207: extern volatile unsigned char SRCON @ 0x185;
"3209
[; ;pic16f887.h: 3209: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3212: typedef union {
[; ;pic16f887.h: 3213: struct {
[; ;pic16f887.h: 3214: unsigned FVREN :1;
[; ;pic16f887.h: 3215: unsigned :1;
[; ;pic16f887.h: 3216: unsigned PULSR :1;
[; ;pic16f887.h: 3217: unsigned PULSS :1;
[; ;pic16f887.h: 3218: unsigned C2REN :1;
[; ;pic16f887.h: 3219: unsigned C1SEN :1;
[; ;pic16f887.h: 3220: unsigned SR0 :1;
[; ;pic16f887.h: 3221: unsigned SR1 :1;
[; ;pic16f887.h: 3222: };
[; ;pic16f887.h: 3223: } SRCONbits_t;
[; ;pic16f887.h: 3224: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3263: extern volatile unsigned char BAUDCTL @ 0x187;
"3265
[; ;pic16f887.h: 3265: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3268: typedef union {
[; ;pic16f887.h: 3269: struct {
[; ;pic16f887.h: 3270: unsigned ABDEN :1;
[; ;pic16f887.h: 3271: unsigned WUE :1;
[; ;pic16f887.h: 3272: unsigned :1;
[; ;pic16f887.h: 3273: unsigned BRG16 :1;
[; ;pic16f887.h: 3274: unsigned SCKP :1;
[; ;pic16f887.h: 3275: unsigned :1;
[; ;pic16f887.h: 3276: unsigned RCIDL :1;
[; ;pic16f887.h: 3277: unsigned ABDOVF :1;
[; ;pic16f887.h: 3278: };
[; ;pic16f887.h: 3279: } BAUDCTLbits_t;
[; ;pic16f887.h: 3280: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3314: extern volatile unsigned char ANSEL @ 0x188;
"3316
[; ;pic16f887.h: 3316: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3319: typedef union {
[; ;pic16f887.h: 3320: struct {
[; ;pic16f887.h: 3321: unsigned ANS0 :1;
[; ;pic16f887.h: 3322: unsigned ANS1 :1;
[; ;pic16f887.h: 3323: unsigned ANS2 :1;
[; ;pic16f887.h: 3324: unsigned ANS3 :1;
[; ;pic16f887.h: 3325: unsigned ANS4 :1;
[; ;pic16f887.h: 3326: unsigned ANS5 :1;
[; ;pic16f887.h: 3327: unsigned ANS6 :1;
[; ;pic16f887.h: 3328: unsigned ANS7 :1;
[; ;pic16f887.h: 3329: };
[; ;pic16f887.h: 3330: } ANSELbits_t;
[; ;pic16f887.h: 3331: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3375: extern volatile unsigned char ANSELH @ 0x189;
"3377
[; ;pic16f887.h: 3377: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3380: typedef union {
[; ;pic16f887.h: 3381: struct {
[; ;pic16f887.h: 3382: unsigned ANS8 :1;
[; ;pic16f887.h: 3383: unsigned ANS9 :1;
[; ;pic16f887.h: 3384: unsigned ANS10 :1;
[; ;pic16f887.h: 3385: unsigned ANS11 :1;
[; ;pic16f887.h: 3386: unsigned ANS12 :1;
[; ;pic16f887.h: 3387: unsigned ANS13 :1;
[; ;pic16f887.h: 3388: };
[; ;pic16f887.h: 3389: } ANSELHbits_t;
[; ;pic16f887.h: 3390: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3424: extern volatile unsigned char EECON1 @ 0x18C;
"3426
[; ;pic16f887.h: 3426: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3429: typedef union {
[; ;pic16f887.h: 3430: struct {
[; ;pic16f887.h: 3431: unsigned RD :1;
[; ;pic16f887.h: 3432: unsigned WR :1;
[; ;pic16f887.h: 3433: unsigned WREN :1;
[; ;pic16f887.h: 3434: unsigned WRERR :1;
[; ;pic16f887.h: 3435: unsigned :3;
[; ;pic16f887.h: 3436: unsigned EEPGD :1;
[; ;pic16f887.h: 3437: };
[; ;pic16f887.h: 3438: } EECON1bits_t;
[; ;pic16f887.h: 3439: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3468: extern volatile unsigned char EECON2 @ 0x18D;
"3470
[; ;pic16f887.h: 3470: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3480: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3482: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3484: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3486: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3488: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3490: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3492: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3494: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3496: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3498: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3500: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3502: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3504: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3506: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3508: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3510: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3512: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3514: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3516: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3518: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3520: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3522: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3524: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3526: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3528: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3530: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3532: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3534: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3536: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3538: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3540: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3542: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3544: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3546: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3548: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3550: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3552: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3554: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3556: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3558: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3560: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3562: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3564: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3566: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3568: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3570: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3572: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3574: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3576: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3578: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3580: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3582: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3584: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3586: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3588: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3590: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3592: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3594: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3596: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3598: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3600: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3602: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3604: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3606: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3608: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3610: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3612: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3614: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3616: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3618: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3620: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3622: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3624: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3626: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3628: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3630: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3632: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3634: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3636: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3638: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3640: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3642: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3644: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3646: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3648: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3650: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3652: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3654: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3656: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3658: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3660: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3662: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3664: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3666: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3668: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3670: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3672: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3674: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3676: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3678: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3680: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3682: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3684: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3686: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3688: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3690: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3692: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3694: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3696: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3698: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3700: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3702: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3704: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3706: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3708: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3710: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3712: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3714: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3716: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3718: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3720: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3722: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3724: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3726: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3728: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3730: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3732: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3734: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3736: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3738: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3740: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3742: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3744: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3746: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3748: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3750: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3752: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3754: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3756: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3758: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3760: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3762: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3764: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3766: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3768: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3770: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3772: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3774: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3776: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3778: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3782: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3784: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3786: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3788: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3790: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3792: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3794: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3796: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3798: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3800: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3804: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3806: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3808: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3810: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3812: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3814: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3816: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3818: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3820: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3822: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3824: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3826: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3828: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3830: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3832: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3834: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3836: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3838: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3840: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3842: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3844: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3846: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3848: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3850: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3852: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3854: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3856: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3858: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3860: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3862: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3866: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3868: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3870: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3872: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3874: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3876: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3878: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3880: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3882: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3884: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3886: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3888: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3890: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3892: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3894: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3898: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3900: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3902: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3904: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3906: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3908: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3910: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3912: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3914: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3916: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3918: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3920: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3922: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3924: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 3926: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 3928: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3930: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3932: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3934: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3936: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 3938: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 3940: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 3942: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 3944: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 3946: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 3948: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 3950: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 3952: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 3954: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 3956: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 3958: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 3960: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 3962: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 3964: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 3966: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 3968: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 3970: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 3972: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 3974: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 3976: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 3978: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 3980: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 3982: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 3984: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 3986: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 3988: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 3990: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 3992: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 3994: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 3996: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 3998: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4000: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4002: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4004: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4006: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4008: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4010: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4012: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4014: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4016: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4018: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4020: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4022: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4024: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4026: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4028: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4030: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4032: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4034: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4036: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4038: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4040: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4042: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4044: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4046: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4048: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4050: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4052: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4054: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4056: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4058: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4060: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4062: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4064: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4066: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4068: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4070: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4072: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4074: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4076: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4078: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4080: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4082: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4084: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4086: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4088: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4090: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4092: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4094: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4096: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4098: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4100: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4102: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4104: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4106: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4108: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4110: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4112: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4114: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4116: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4118: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4120: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4122: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4124: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4126: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4128: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4130: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4132: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4134: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4136: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4138: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4140: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4142: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4144: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4146: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4148: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4150: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4152: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4154: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4156: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4158: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4160: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4162: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4164: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4166: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4168: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4170: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4172: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4174: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4176: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4178: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4180: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4182: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4184: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4186: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4188: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4190: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4192: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4194: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4196: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4198: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4200: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4202: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4204: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4206: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4208: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4210: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4212: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4214: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4216: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4218: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4220: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4222: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4224: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4226: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4228: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4230: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 41: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 42: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 43: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 44: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 184: extern unsigned char __resetbits;
[; ;pic.h: 185: extern __bit __powerdown;
[; ;pic.h: 186: extern __bit __timeout;
"24 main.c
[p x FOSC=HS ]
"25
[p x WDTE=OFF ]
"26
[p x PWRTE=OFF ]
"27
[p x MCLRE=ON ]
"28
[p x CP=OFF ]
"29
[p x CPD=OFF ]
"30
[p x BOREN=ON ]
"31
[p x IESO=ON ]
"32
[p x FCMEN=ON ]
"33
[p x LVP=OFF ]
"36
[p x BOR4V=BOR40V ]
"37
[p x WRT=OFF ]
"44
[v _ADCvalue `f ~T0 @X0 1 e ]
[; ;main.c: 44: float ADCvalue;
"45
[v _voltage `f ~T0 @X0 1 e ]
[; ;main.c: 45: float voltage;
"47
[v _set `uc ~T0 @X0 1 e ]
[v _count `uc ~T0 @X0 1 e ]
[v _mode `uc ~T0 @X0 1 e ]
[v _quit `uc ~T0 @X0 1 e ]
[v _alarm `uc ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned char set, count, mode, quit, alarm;
"48
[v _second `uc ~T0 @X0 1 e ]
[v _minute `uc ~T0 @X0 1 e ]
[v _hour `uc ~T0 @X0 1 e ]
[v _hour_display `uc ~T0 @X0 1 e ]
[v _date `uc ~T0 @X0 1 e ]
[v _day `uc ~T0 @X0 1 e ]
[v _month `uc ~T0 @X0 1 e ]
[v _year `uc ~T0 @X0 1 e ]
[v _day_alarm `uc ~T0 @X0 1 e ]
[v _hour_alarm `uc ~T0 @X0 1 e ]
[v _hour_alarm_display `uc ~T0 @X0 1 e ]
[v _minute_alarm `uc ~T0 @X0 1 e ]
[v _temperature `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char second, minute, hour, hour_display, date, day, month, year, day_alarm, hour_alarm, hour_alarm_display, minute_alarm, temperature;
"50
[v _Fix_Time `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 50: void Fix_Time() {
[e :U _Fix_Time ]
[f ]
[; ;main.c: 52: if (day == 0) day = 7;
"52
[e $ ! == -> _day `i -> 0 `i 145  ]
[e = _day -> -> 7 `i `uc ]
[e $U 146  ]
"53
[e :U 145 ]
[; ;main.c: 53: else if (day == 8) day = 1;
[e $ ! == -> _day `i -> 8 `i 147  ]
[e = _day -> -> 1 `i `uc ]
[e :U 147 ]
"55
[e :U 146 ]
[; ;main.c: 55: if (month == 0) month = 12;
[e $ ! == -> _month `i -> 0 `i 148  ]
[e = _month -> -> 12 `i `uc ]
[e $U 149  ]
"56
[e :U 148 ]
[; ;main.c: 56: else if (month == 13) month = 1;
[e $ ! == -> _month `i -> 13 `i 150  ]
[e = _month -> -> 1 `i `uc ]
[e :U 150 ]
"58
[e :U 149 ]
[; ;main.c: 58: if (year == 255) year = 99;
[e $ ! == -> _year `i -> 255 `i 151  ]
[e = _year -> -> 99 `i `uc ]
[e $U 152  ]
"59
[e :U 151 ]
[; ;main.c: 59: else if (year == 100) year = 0;
[e $ ! == -> _year `i -> 100 `i 153  ]
[e = _year -> -> 0 `i `uc ]
[e :U 153 ]
"61
[e :U 152 ]
[; ;main.c: 61: switch (month) {
[e $U 155  ]
{
[; ;main.c: 62: case 2:
"62
[e :U 156 ]
[; ;main.c: 63: {
"63
{
[; ;main.c: 64: if (year & 3) {
"64
[e $ ! != & -> _year `i -> 3 `i -> 0 `i 157  ]
{
[; ;main.c: 65: if (date == 0) date = 28;
"65
[e $ ! == -> _date `i -> 0 `i 158  ]
[e = _date -> -> 28 `i `uc ]
[e $U 159  ]
"66
[e :U 158 ]
[; ;main.c: 66: else if (date == 29 || date == 30 || date == 31) date = 1;
[e $ ! || || == -> _date `i -> 29 `i == -> _date `i -> 30 `i == -> _date `i -> 31 `i 160  ]
[e = _date -> -> 1 `i `uc ]
[e :U 160 ]
"67
[e :U 159 ]
}
[; ;main.c: 67: } else {
[e $U 161  ]
[e :U 157 ]
{
[; ;main.c: 68: if (date == 0) date = 29;
"68
[e $ ! == -> _date `i -> 0 `i 162  ]
[e = _date -> -> 29 `i `uc ]
[e $U 163  ]
"69
[e :U 162 ]
[; ;main.c: 69: else if (date == 30 || date == 31) date = 1;
[e $ ! || == -> _date `i -> 30 `i == -> _date `i -> 31 `i 164  ]
[e = _date -> -> 1 `i `uc ]
[e :U 164 ]
"70
[e :U 163 ]
}
[e :U 161 ]
[; ;main.c: 70: }
[; ;main.c: 71: break;
"71
[e $U 154  ]
"72
}
[; ;main.c: 72: }
[; ;main.c: 73: case 4: case 6: case 9: case 11:
"73
[e :U 165 ]
[e :U 166 ]
[e :U 167 ]
[e :U 168 ]
[; ;main.c: 74: {
"74
{
[; ;main.c: 75: if (date == 0) date = 30;
"75
[e $ ! == -> _date `i -> 0 `i 169  ]
[e = _date -> -> 30 `i `uc ]
[e $U 170  ]
"76
[e :U 169 ]
[; ;main.c: 76: else if (date == 31) date = 1;
[e $ ! == -> _date `i -> 31 `i 171  ]
[e = _date -> -> 1 `i `uc ]
[e :U 171 ]
"77
[e :U 170 ]
[; ;main.c: 77: break;
[e $U 154  ]
"78
}
[; ;main.c: 78: }
[; ;main.c: 79: default:
"79
[e :U 172 ]
[; ;main.c: 80: {
"80
{
[; ;main.c: 81: if (date == 0) date = 31;
"81
[e $ ! == -> _date `i -> 0 `i 173  ]
[e = _date -> -> 31 `i `uc ]
[e $U 174  ]
"82
[e :U 173 ]
[; ;main.c: 82: else if (date == 32) date = 1;
[e $ ! == -> _date `i -> 32 `i 175  ]
[e = _date -> -> 1 `i `uc ]
[e :U 175 ]
"83
[e :U 174 ]
[; ;main.c: 83: break;
[e $U 154  ]
"84
}
"85
}
[; ;main.c: 84: }
[; ;main.c: 85: }
[e $U 154  ]
"61
[e :U 155 ]
[e [\ _month , $ -> -> 2 `i `uc 156
 , $ -> -> 4 `i `uc 165
 , $ -> -> 6 `i `uc 166
 , $ -> -> 9 `i `uc 167
 , $ -> -> 11 `i `uc 168
 172 ]
"85
[e :U 154 ]
[; ;main.c: 86: }
"86
[e :UE 144 ]
}
"88
[v _Fix_Alarm `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 88: void Fix_Alarm() {
[e :U _Fix_Alarm ]
[f ]
[; ;main.c: 89: if (minute_alarm == 255) minute_alarm = 59;
"89
[e $ ! == -> _minute_alarm `i -> 255 `i 177  ]
[e = _minute_alarm -> -> 59 `i `uc ]
[e $U 178  ]
"90
[e :U 177 ]
[; ;main.c: 90: else if (minute_alarm == 60) minute_alarm = 0;
[e $ ! == -> _minute_alarm `i -> 60 `i 179  ]
[e = _minute_alarm -> -> 0 `i `uc ]
[e :U 179 ]
"92
[e :U 178 ]
[; ;main.c: 92: if (hour_alarm < 40 || hour_alarm == 255) {
[e $ ! || < -> _hour_alarm `i -> 40 `i == -> _hour_alarm `i -> 255 `i 180  ]
{
[; ;main.c: 93: if (hour_alarm == 255) hour_alarm = 23;
"93
[e $ ! == -> _hour_alarm `i -> 255 `i 181  ]
[e = _hour_alarm -> -> 23 `i `uc ]
[e $U 182  ]
"94
[e :U 181 ]
[; ;main.c: 94: else if (hour_alarm == 24) hour_alarm = 0;
[e $ ! == -> _hour_alarm `i -> 24 `i 183  ]
[e = _hour_alarm -> -> 0 `i `uc ]
[e :U 183 ]
"95
[e :U 182 ]
}
[; ;main.c: 95: } else if (hour_alarm < 60) {
[e $U 184  ]
[e :U 180 ]
[e $ ! < -> _hour_alarm `i -> 60 `i 185  ]
{
[; ;main.c: 96: if (hour_alarm == 40) hour_alarm = 52;
"96
[e $ ! == -> _hour_alarm `i -> 40 `i 186  ]
[e = _hour_alarm -> -> 52 `i `uc ]
[e $U 187  ]
"97
[e :U 186 ]
[; ;main.c: 97: else if (hour_alarm == 51 && RB3 == 0) hour_alarm = 71;
[e $ ! && == -> _hour_alarm `i -> 51 `i == -> _RB3 `i -> 0 `i 188  ]
[e = _hour_alarm -> -> 71 `i `uc ]
[e $U 189  ]
"98
[e :U 188 ]
[; ;main.c: 98: else if (hour_alarm == 52 && RB2 == 0) hour_alarm = 72;
[e $ ! && == -> _hour_alarm `i -> 52 `i == -> _RB2 `i -> 0 `i 190  ]
[e = _hour_alarm -> -> 72 `i `uc ]
[e $U 191  ]
"99
[e :U 190 ]
[; ;main.c: 99: else if (hour_alarm == 53 && RB2 == 0) hour_alarm = 41;
[e $ ! && == -> _hour_alarm `i -> 53 `i == -> _RB2 `i -> 0 `i 192  ]
[e = _hour_alarm -> -> 41 `i `uc ]
[e :U 192 ]
"100
[e :U 191 ]
[e :U 189 ]
[e :U 187 ]
}
[; ;main.c: 100: } else {
[e $U 193  ]
[e :U 185 ]
{
[; ;main.c: 101: if (hour_alarm == 60) hour_alarm = 72;
"101
[e $ ! == -> _hour_alarm `i -> 60 `i 194  ]
[e = _hour_alarm -> -> 72 `i `uc ]
[e $U 195  ]
"102
[e :U 194 ]
[; ;main.c: 102: else if (hour_alarm == 71 && RB3 == 0) hour_alarm = 51;
[e $ ! && == -> _hour_alarm `i -> 71 `i == -> _RB3 `i -> 0 `i 196  ]
[e = _hour_alarm -> -> 51 `i `uc ]
[e $U 197  ]
"103
[e :U 196 ]
[; ;main.c: 103: else if (hour_alarm == 72 && RB2 == 0) hour_alarm = 52;
[e $ ! && == -> _hour_alarm `i -> 72 `i == -> _RB2 `i -> 0 `i 198  ]
[e = _hour_alarm -> -> 52 `i `uc ]
[e $U 199  ]
"104
[e :U 198 ]
[; ;main.c: 104: else if (hour_alarm == 73 && RB2 == 0) hour_alarm = 61;
[e $ ! && == -> _hour_alarm `i -> 73 `i == -> _RB2 `i -> 0 `i 200  ]
[e = _hour_alarm -> -> 61 `i `uc ]
[e :U 200 ]
"105
[e :U 199 ]
[e :U 197 ]
[e :U 195 ]
}
[e :U 193 ]
[e :U 184 ]
[; ;main.c: 105: }
[; ;main.c: 106: }
"106
[e :UE 176 ]
}
"108
[v _Read_FullTime `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 108: void Read_FullTime() {
[e :U _Read_FullTime ]
[f ]
[; ;main.c: 109: second = DS1307_Read(0x00);
"109
[e = _second ( _DS1307_Read (1 -> -> 0 `i `uc ]
[; ;main.c: 110: minute = DS1307_Read(0x01);
"110
[e = _minute ( _DS1307_Read (1 -> -> 1 `i `uc ]
[; ;main.c: 111: hour = DS1307_Read(0x02);
"111
[e = _hour ( _DS1307_Read (1 -> -> 2 `i `uc ]
[; ;main.c: 112: day = DS1307_Read(0x03);
"112
[e = _day ( _DS1307_Read (1 -> -> 3 `i `uc ]
[; ;main.c: 113: date = DS1307_Read(0x04);
"113
[e = _date ( _DS1307_Read (1 -> -> 4 `i `uc ]
[; ;main.c: 114: month = DS1307_Read(0x05);
"114
[e = _month ( _DS1307_Read (1 -> -> 5 `i `uc ]
[; ;main.c: 115: year = DS1307_Read(0x06);
"115
[e = _year ( _DS1307_Read (1 -> -> 6 `i `uc ]
[; ;main.c: 116: }
"116
[e :UE 201 ]
}
"118
[v _Read_Time `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 118: void Read_Time() {
[e :U _Read_Time ]
[f ]
[; ;main.c: 119: second = DS1307_Read(0x00);
"119
[e = _second ( _DS1307_Read (1 -> -> 0 `i `uc ]
[; ;main.c: 120: if (second == 0) minute = DS1307_Read(0x01);
"120
[e $ ! == -> _second `i -> 0 `i 203  ]
[e = _minute ( _DS1307_Read (1 -> -> 1 `i `uc ]
[e :U 203 ]
[; ;main.c: 121: if (minute == 0) hour = DS1307_Read(0x02);
"121
[e $ ! == -> _minute `i -> 0 `i 204  ]
[e = _hour ( _DS1307_Read (1 -> -> 2 `i `uc ]
[e :U 204 ]
[; ;main.c: 122: if (hour == 0 || hour == 52) {
"122
[e $ ! || == -> _hour `i -> 0 `i == -> _hour `i -> 52 `i 205  ]
{
[; ;main.c: 123: day = DS1307_Read(0x03);
"123
[e = _day ( _DS1307_Read (1 -> -> 3 `i `uc ]
[; ;main.c: 124: date = DS1307_Read(0x04);
"124
[e = _date ( _DS1307_Read (1 -> -> 4 `i `uc ]
"125
}
[e :U 205 ]
[; ;main.c: 125: }
[; ;main.c: 126: if (date == 1) month = DS1307_Read(0x05);
"126
[e $ ! == -> _date `i -> 1 `i 206  ]
[e = _month ( _DS1307_Read (1 -> -> 5 `i `uc ]
[e :U 206 ]
[; ;main.c: 127: if (month == 1) year = DS1307_Read(0x06);
"127
[e $ ! == -> _month `i -> 1 `i 207  ]
[e = _year ( _DS1307_Read (1 -> -> 6 `i `uc ]
[e :U 207 ]
[; ;main.c: 128: }
"128
[e :UE 202 ]
}
"130
[v _Read_Tem `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 130: void Read_Tem() {
[e :U _Read_Tem ]
[f ]
[; ;main.c: 131: ADCON0bits.GO_nDONE = 1;
"131
[e = . . _ADCON0bits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 132: while (ADCON0bits.GO_nDONE);
"132
[e $U 209  ]
[e :U 210 ]
[e :U 209 ]
[e $ != -> . . _ADCON0bits 0 1 `i -> -> -> 0 `i `Vuc `i 210  ]
[e :U 211 ]
[; ;main.c: 133: ADCvalue = (ADRESH << 8) | ADRESL;
"133
[e = _ADCvalue -> | << -> _ADRESH `i -> 8 `i -> _ADRESL `i `f ]
[; ;main.c: 134: voltage = ADCvalue * 5000.0f / 1023;
"134
[e = _voltage / * _ADCvalue -> .5000.0 `f -> -> 1023 `i `f ]
[; ;main.c: 135: temperature = voltage / 10;
"135
[e = _temperature -> / _voltage -> -> 10 `i `f `uc ]
[; ;main.c: 136: }
"136
[e :UE 208 ]
}
"138
[v _Write_Min `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 138: void Write_Min() {
[e :U _Write_Min ]
[f ]
[; ;main.c: 139: if (second == 255) second = 59;
"139
[e $ ! == -> _second `i -> 255 `i 213  ]
[e = _second -> -> 59 `i `uc ]
[e $U 214  ]
"140
[e :U 213 ]
[; ;main.c: 140: else if (second == 60) second = 0;
[e $ ! == -> _second `i -> 60 `i 215  ]
[e = _second -> -> 0 `i `uc ]
[e :U 215 ]
"142
[e :U 214 ]
[; ;main.c: 142: if (minute == 255) minute = 59;
[e $ ! == -> _minute `i -> 255 `i 216  ]
[e = _minute -> -> 59 `i `uc ]
[e $U 217  ]
"143
[e :U 216 ]
[; ;main.c: 143: else if (minute == 60) minute = 0;
[e $ ! == -> _minute `i -> 60 `i 218  ]
[e = _minute -> -> 0 `i `uc ]
[e :U 218 ]
"144
[e :U 217 ]
[; ;main.c: 144: DS1307_Write(0x00, 0);
[e ( _DS1307_Write (2 , -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 145: DS1307_Write(0x01, minute);
"145
[e ( _DS1307_Write (2 , -> -> 1 `i `uc _minute ]
[; ;main.c: 146: }
"146
[e :UE 212 ]
}
"148
[v _Write_Hour `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 148: void Write_Hour() {
[e :U _Write_Hour ]
[f ]
[; ;main.c: 150: if (hour < 40 || hour == 255) {
"150
[e $ ! || < -> _hour `i -> 40 `i == -> _hour `i -> 255 `i 220  ]
{
[; ;main.c: 151: if (hour == 255) hour = 23;
"151
[e $ ! == -> _hour `i -> 255 `i 221  ]
[e = _hour -> -> 23 `i `uc ]
[e $U 222  ]
"152
[e :U 221 ]
[; ;main.c: 152: else if (hour == 24) hour = 0;
[e $ ! == -> _hour `i -> 24 `i 223  ]
[e = _hour -> -> 0 `i `uc ]
[e :U 223 ]
"153
[e :U 222 ]
}
[; ;main.c: 153: } else if (hour < 60) {
[e $U 224  ]
[e :U 220 ]
[e $ ! < -> _hour `i -> 60 `i 225  ]
{
[; ;main.c: 154: if (hour == 40) hour = 52;
"154
[e $ ! == -> _hour `i -> 40 `i 226  ]
[e = _hour -> -> 52 `i `uc ]
[e $U 227  ]
"155
[e :U 226 ]
[; ;main.c: 155: else if (hour == 51 && RB3 == 0) hour = 71;
[e $ ! && == -> _hour `i -> 51 `i == -> _RB3 `i -> 0 `i 228  ]
[e = _hour -> -> 71 `i `uc ]
[e $U 229  ]
"156
[e :U 228 ]
[; ;main.c: 156: else if (hour == 52 && RB2 == 0) hour = 72;
[e $ ! && == -> _hour `i -> 52 `i == -> _RB2 `i -> 0 `i 230  ]
[e = _hour -> -> 72 `i `uc ]
[e $U 231  ]
"157
[e :U 230 ]
[; ;main.c: 157: else if (hour == 53 && RB2 == 0) hour = 41;
[e $ ! && == -> _hour `i -> 53 `i == -> _RB2 `i -> 0 `i 232  ]
[e = _hour -> -> 41 `i `uc ]
[e :U 232 ]
"158
[e :U 231 ]
[e :U 229 ]
[e :U 227 ]
}
[; ;main.c: 158: } else {
[e $U 233  ]
[e :U 225 ]
{
[; ;main.c: 159: if (hour == 60) hour = 72;
"159
[e $ ! == -> _hour `i -> 60 `i 234  ]
[e = _hour -> -> 72 `i `uc ]
[e $U 235  ]
"160
[e :U 234 ]
[; ;main.c: 160: else if (hour == 71 && RB3 == 0) hour = 51;
[e $ ! && == -> _hour `i -> 71 `i == -> _RB3 `i -> 0 `i 236  ]
[e = _hour -> -> 51 `i `uc ]
[e $U 237  ]
"161
[e :U 236 ]
[; ;main.c: 161: else if (hour == 72 && RB2 == 0) hour = 52;
[e $ ! && == -> _hour `i -> 72 `i == -> _RB2 `i -> 0 `i 238  ]
[e = _hour -> -> 52 `i `uc ]
[e $U 239  ]
"162
[e :U 238 ]
[; ;main.c: 162: else if (hour == 73 && RB2 == 0) hour = 61;
[e $ ! && == -> _hour `i -> 73 `i == -> _RB2 `i -> 0 `i 240  ]
[e = _hour -> -> 61 `i `uc ]
[e :U 240 ]
"163
[e :U 239 ]
[e :U 237 ]
[e :U 235 ]
}
[e :U 233 ]
[e :U 224 ]
[; ;main.c: 163: }
[; ;main.c: 164: DS1307_Write(0x02, hour);
"164
[e ( _DS1307_Write (2 , -> -> 2 `i `uc _hour ]
[; ;main.c: 165: }
"165
[e :UE 219 ]
}
"167
[v _Write_Time `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 167: void Write_Time() {
[e :U _Write_Time ]
[f ]
[; ;main.c: 168: Fix_Time();
"168
[e ( _Fix_Time ..  ]
[; ;main.c: 169: DS1307_Write(0x03, day);
"169
[e ( _DS1307_Write (2 , -> -> 3 `i `uc _day ]
[; ;main.c: 170: DS1307_Write(0x04, date);
"170
[e ( _DS1307_Write (2 , -> -> 4 `i `uc _date ]
[; ;main.c: 171: DS1307_Write(0x05, month);
"171
[e ( _DS1307_Write (2 , -> -> 5 `i `uc _month ]
[; ;main.c: 172: DS1307_Write(0x06, year);
"172
[e ( _DS1307_Write (2 , -> -> 6 `i `uc _year ]
[; ;main.c: 173: }
"173
[e :UE 241 ]
}
"175
[v _Change_Mode12h `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 175: void Change_Mode12h() {
[e :U _Change_Mode12h ]
[f ]
[; ;main.c: 176: if (hour < 40) {
"176
[e $ ! < -> _hour `i -> 40 `i 243  ]
{
[; ;main.c: 178: if (hour == 0) hour = 52;
"178
[e $ ! == -> _hour `i -> 0 `i 244  ]
[e = _hour -> -> 52 `i `uc ]
[e $U 245  ]
"179
[e :U 244 ]
[; ;main.c: 179: else if (hour == 12) hour = 72;
[e $ ! == -> _hour `i -> 12 `i 246  ]
[e = _hour -> -> 72 `i `uc ]
[e $U 247  ]
"180
[e :U 246 ]
[; ;main.c: 180: else if (hour > 12) hour = hour + 48;
[e $ ! > -> _hour `i -> 12 `i 248  ]
[e = _hour -> + -> _hour `i -> 48 `i `uc ]
[e $U 249  ]
"181
[e :U 248 ]
[; ;main.c: 181: else hour = hour + 40;
[e = _hour -> + -> _hour `i -> 40 `i `uc ]
[e :U 249 ]
[e :U 247 ]
[e :U 245 ]
[; ;main.c: 183: if (hour_alarm == 0) hour_alarm = 52;
"183
[e $ ! == -> _hour_alarm `i -> 0 `i 250  ]
[e = _hour_alarm -> -> 52 `i `uc ]
[e $U 251  ]
"184
[e :U 250 ]
[; ;main.c: 184: else if (hour_alarm == 12) hour_alarm = 72;
[e $ ! == -> _hour_alarm `i -> 12 `i 252  ]
[e = _hour_alarm -> -> 72 `i `uc ]
[e $U 253  ]
"185
[e :U 252 ]
[; ;main.c: 185: else if (hour_alarm > 12) hour_alarm = hour_alarm + 48;
[e $ ! > -> _hour_alarm `i -> 12 `i 254  ]
[e = _hour_alarm -> + -> _hour_alarm `i -> 48 `i `uc ]
[e $U 255  ]
"186
[e :U 254 ]
[; ;main.c: 186: else hour_alarm = hour_alarm + 40;
[e = _hour_alarm -> + -> _hour_alarm `i -> 40 `i `uc ]
[e :U 255 ]
[e :U 253 ]
[e :U 251 ]
"187
}
[; ;main.c: 187: } else {
[e $U 256  ]
[e :U 243 ]
{
[; ;main.c: 189: if (hour == 52) hour = 0;
"189
[e $ ! == -> _hour `i -> 52 `i 257  ]
[e = _hour -> -> 0 `i `uc ]
[e $U 258  ]
"190
[e :U 257 ]
[; ;main.c: 190: else if (hour == 72) hour = 12;
[e $ ! == -> _hour `i -> 72 `i 259  ]
[e = _hour -> -> 12 `i `uc ]
[e $U 260  ]
"191
[e :U 259 ]
[; ;main.c: 191: else if (hour < 60) hour = hour - 40;
[e $ ! < -> _hour `i -> 60 `i 261  ]
[e = _hour -> - -> _hour `i -> 40 `i `uc ]
[e $U 262  ]
"192
[e :U 261 ]
[; ;main.c: 192: else hour = hour - 48;
[e = _hour -> - -> _hour `i -> 48 `i `uc ]
[e :U 262 ]
[e :U 260 ]
[e :U 258 ]
[; ;main.c: 194: if (hour_alarm == 52) hour_alarm = 0;
"194
[e $ ! == -> _hour_alarm `i -> 52 `i 263  ]
[e = _hour_alarm -> -> 0 `i `uc ]
[e $U 264  ]
"195
[e :U 263 ]
[; ;main.c: 195: else if (hour_alarm == 72) hour_alarm = 12;
[e $ ! == -> _hour_alarm `i -> 72 `i 265  ]
[e = _hour_alarm -> -> 12 `i `uc ]
[e $U 266  ]
"196
[e :U 265 ]
[; ;main.c: 196: else if (hour_alarm < 60) hour_alarm = hour_alarm - 40;
[e $ ! < -> _hour_alarm `i -> 60 `i 267  ]
[e = _hour_alarm -> - -> _hour_alarm `i -> 40 `i `uc ]
[e $U 268  ]
"197
[e :U 267 ]
[; ;main.c: 197: else hour_alarm = hour_alarm - 48;
[e = _hour_alarm -> - -> _hour_alarm `i -> 48 `i `uc ]
[e :U 268 ]
[e :U 266 ]
[e :U 264 ]
"198
}
[e :U 256 ]
[; ;main.c: 198: }
[; ;main.c: 199: }
"199
[e :UE 242 ]
}
"204
[v _Display `(v ~T0 @X0 1 ef1`uc ]
{
[; ;main.c: 204: void Display(unsigned char One) {
[e :U _Display ]
[v _One `uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 205: Lcd_Write_Char(One / 10 + 0x30);
"205
[e ( _Lcd_Write_Char (1 -> + / -> _One `i -> 10 `i -> 48 `i `uc ]
[; ;main.c: 206: Lcd_Write_Char(One % 10 + 0x30);
"206
[e ( _Lcd_Write_Char (1 -> + % -> _One `i -> 10 `i -> 48 `i `uc ]
[; ;main.c: 207: }
"207
[e :UE 269 ]
}
"209
[v _Display_Hour `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 209: void Display_Hour() {
[e :U _Display_Hour ]
[f ]
[; ;main.c: 210: if (hour < 40) hour_display = hour;
"210
[e $ ! < -> _hour `i -> 40 `i 271  ]
[e = _hour_display _hour ]
[e $U 272  ]
"211
[e :U 271 ]
[; ;main.c: 211: else if (hour < 60) hour_display = hour - 40;
[e $ ! < -> _hour `i -> 60 `i 273  ]
[e = _hour_display -> - -> _hour `i -> 40 `i `uc ]
[e $U 274  ]
"212
[e :U 273 ]
[; ;main.c: 212: else if (hour > 60) hour_display = hour - 60;
[e $ ! > -> _hour `i -> 60 `i 275  ]
[e = _hour_display -> - -> _hour `i -> 60 `i `uc ]
[e :U 275 ]
"213
[e :U 274 ]
[e :U 272 ]
[; ;main.c: 213: }
[e :UE 270 ]
}
"215
[v _Display_HourAlarm `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 215: void Display_HourAlarm() {
[e :U _Display_HourAlarm ]
[f ]
[; ;main.c: 216: if (hour_alarm < 40) hour_alarm_display = hour_alarm;
"216
[e $ ! < -> _hour_alarm `i -> 40 `i 277  ]
[e = _hour_alarm_display _hour_alarm ]
[e $U 278  ]
"217
[e :U 277 ]
[; ;main.c: 217: else if (hour_alarm < 60) hour_alarm_display = hour_alarm - 40;
[e $ ! < -> _hour_alarm `i -> 60 `i 279  ]
[e = _hour_alarm_display -> - -> _hour_alarm `i -> 40 `i `uc ]
[e $U 280  ]
"218
[e :U 279 ]
[; ;main.c: 218: else if (hour_alarm > 60) hour_alarm_display = hour_alarm - 60;
[e $ ! > -> _hour_alarm `i -> 60 `i 281  ]
[e = _hour_alarm_display -> - -> _hour_alarm `i -> 60 `i `uc ]
[e :U 281 ]
"219
[e :U 280 ]
[e :U 278 ]
[; ;main.c: 219: }
[e :UE 276 ]
}
"242
[v _Display_AM_PM `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 242: void Display_AM_PM() {
[e :U _Display_AM_PM ]
[f ]
[; ;main.c: 243: if (hour < 40) Lcd_Write_String("   ");
"243
[e $ ! < -> _hour `i -> 40 `i 283  ]
[e ( _Lcd_Write_String (1 -> :s 1C `*uc ]
[e $U 284  ]
"244
[e :U 283 ]
[; ;main.c: 244: else if (hour < 60) Lcd_Write_String(" AM");
[e $ ! < -> _hour `i -> 60 `i 285  ]
[e ( _Lcd_Write_String (1 -> :s 2C `*uc ]
[e $U 286  ]
"245
[e :U 285 ]
[; ;main.c: 245: else Lcd_Write_String(" PM");
[e ( _Lcd_Write_String (1 -> :s 3C `*uc ]
[e :U 286 ]
[e :U 284 ]
[; ;main.c: 246: }
"246
[e :UE 282 ]
}
"248
[v _Display_Alarm `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 248: void Display_Alarm() {
[e :U _Display_Alarm ]
[f ]
[; ;main.c: 249: if (alarm) {
"249
[e $ ! != -> _alarm `i -> -> -> 0 `i `uc `i 288  ]
{
[; ;main.c: 250: Lcd_Set_Cursor(1, 1);
"250
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 251: Lcd_Write_String("XOA HEN GIO?    ");
"251
[e ( _Lcd_Write_String (1 -> :s 4C `*uc ]
[; ;main.c: 253: Lcd_Set_Cursor(2, 1);
"253
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 254: Display_HourAlarm();
"254
[e ( _Display_HourAlarm ..  ]
[; ;main.c: 255: Display(hour_alarm_display);
"255
[e ( _Display (1 _hour_alarm_display ]
[; ;main.c: 257: Lcd_Write_Char(':');
"257
[e ( _Lcd_Write_Char (1 -> -> 58 `ui `uc ]
[; ;main.c: 258: Display(minute_alarm);
"258
[e ( _Display (1 _minute_alarm ]
[; ;main.c: 259: if (hour < 40) Lcd_Write_String("   ");
"259
[e $ ! < -> _hour `i -> 40 `i 289  ]
[e ( _Lcd_Write_String (1 -> :s 5C `*uc ]
[e $U 290  ]
"260
[e :U 289 ]
[; ;main.c: 260: else if (hour < 60) Lcd_Write_String(" AM");
[e $ ! < -> _hour `i -> 60 `i 291  ]
[e ( _Lcd_Write_String (1 -> :s 6C `*uc ]
[e $U 292  ]
"261
[e :U 291 ]
[; ;main.c: 261: else Lcd_Write_String(" PM");
[e ( _Lcd_Write_String (1 -> :s 7C `*uc ]
[e :U 292 ]
[e :U 290 ]
[; ;main.c: 262: Lcd_Write_String("           ");
"262
[e ( _Lcd_Write_String (1 -> :s 8C `*uc ]
"263
}
[; ;main.c: 263: } else {
[e $U 293  ]
[e :U 288 ]
{
[; ;main.c: 264: Lcd_Set_Cursor(1, 1);
"264
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 265: Lcd_Write_String("HEN GIO         ");
"265
[e ( _Lcd_Write_String (1 -> :s 9C `*uc ]
[; ;main.c: 266: Lcd_Set_Cursor(2, 1);
"266
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 268: switch (set) {
"268
[e $U 295  ]
{
[; ;main.c: 270: case 1:
"270
[e :U 296 ]
[; ;main.c: 271: {
"271
{
[; ;main.c: 272: Lcd_Write_String("GIO: ");
"272
[e ( _Lcd_Write_String (1 -> :s 10C `*uc ]
[; ;main.c: 273: Lcd_Set_Cursor(2, 6);
"273
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 6 `i `uc ]
[; ;main.c: 274: Display_HourAlarm();
"274
[e ( _Display_HourAlarm ..  ]
[; ;main.c: 275: Display(hour_alarm_display);
"275
[e ( _Display (1 _hour_alarm_display ]
[; ;main.c: 277: if (hour < 40) Lcd_Write_String("   ");
"277
[e $ ! < -> _hour `i -> 40 `i 297  ]
[e ( _Lcd_Write_String (1 -> :s 11C `*uc ]
[e $U 298  ]
"278
[e :U 297 ]
[; ;main.c: 278: else if (hour < 60) Lcd_Write_String(" AM");
[e $ ! < -> _hour `i -> 60 `i 299  ]
[e ( _Lcd_Write_String (1 -> :s 12C `*uc ]
[e $U 300  ]
"279
[e :U 299 ]
[; ;main.c: 279: else Lcd_Write_String(" PM");
[e ( _Lcd_Write_String (1 -> :s 13C `*uc ]
[e :U 300 ]
[e :U 298 ]
[; ;main.c: 280: break;
"280
[e $U 294  ]
"281
}
[; ;main.c: 281: }
[; ;main.c: 283: case 2:
"283
[e :U 301 ]
[; ;main.c: 284: {
"284
{
[; ;main.c: 285: Lcd_Write_String("PHUT: ");
"285
[e ( _Lcd_Write_String (1 -> :s 14C `*uc ]
[; ;main.c: 286: Display(minute_alarm);
"286
[e ( _Display (1 _minute_alarm ]
[; ;main.c: 287: Lcd_Write_String("  ");
"287
[e ( _Lcd_Write_String (1 -> :s 15C `*uc ]
[; ;main.c: 288: break;
"288
[e $U 294  ]
"289
}
"290
}
[; ;main.c: 289: }
[; ;main.c: 290: }
[e $U 294  ]
"268
[e :U 295 ]
[e [\ _set , $ -> -> 1 `i `uc 296
 , $ -> -> 2 `i `uc 301
 294 ]
"290
[e :U 294 ]
[; ;main.c: 291: Lcd_Set_Cursor(2, 11);
"291
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 11 `i `uc ]
[; ;main.c: 292: Lcd_Write_String("      ");
"292
[e ( _Lcd_Write_String (1 -> :s 16C `*uc ]
"294
}
[e :U 293 ]
[; ;main.c: 294: }
[; ;main.c: 295: }
"295
[e :UE 287 ]
}
"297
[v _Display_Time `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 297: void Display_Time() {
[e :U _Display_Time ]
[f ]
[; ;main.c: 299: Lcd_Set_Cursor(1, 1);
"299
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 301: if (alarm)
"301
[e $ ! != -> _alarm `i -> -> -> 0 `i `uc `i 303  ]
[; ;main.c: 302: Lcd_Write_String("ALM ");
"302
[e ( _Lcd_Write_String (1 -> :s 17C `*uc ]
[e $U 304  ]
"303
[e :U 303 ]
[; ;main.c: 303: else Lcd_Write_String("    ");
[e ( _Lcd_Write_String (1 -> :s 18C `*uc ]
[e :U 304 ]
[; ;main.c: 306: Display_Hour();
"306
[e ( _Display_Hour ..  ]
[; ;main.c: 307: Display(hour_display);
"307
[e ( _Display (1 _hour_display ]
[; ;main.c: 310: Lcd_Write_Char(':');
"310
[e ( _Lcd_Write_Char (1 -> -> 58 `ui `uc ]
[; ;main.c: 311: Display(minute);
"311
[e ( _Display (1 _minute ]
[; ;main.c: 314: Lcd_Write_Char(':');
"314
[e ( _Lcd_Write_Char (1 -> -> 58 `ui `uc ]
[; ;main.c: 315: Display(second);
"315
[e ( _Display (1 _second ]
[; ;main.c: 317: Lcd_Set_Cursor(1, 13);
"317
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 13 `i `uc ]
[; ;main.c: 319: if (hour < 40) Lcd_Write_String("   ");
"319
[e $ ! < -> _hour `i -> 40 `i 305  ]
[e ( _Lcd_Write_String (1 -> :s 19C `*uc ]
[e $U 306  ]
"320
[e :U 305 ]
[; ;main.c: 320: else if (hour < 60) Lcd_Write_String(" AM");
[e $ ! < -> _hour `i -> 60 `i 307  ]
[e ( _Lcd_Write_String (1 -> :s 20C `*uc ]
[e $U 308  ]
"321
[e :U 307 ]
[; ;main.c: 321: else Lcd_Write_String(" PM");
[e ( _Lcd_Write_String (1 -> :s 21C `*uc ]
[e :U 308 ]
[e :U 306 ]
[; ;main.c: 324: Lcd_Set_Cursor(2, 1);
"324
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 326: switch (day % 10) {
"326
[e $U 310  ]
{
[; ;main.c: 327: case 1: Lcd_Write_String("SUN");
"327
[e :U 311 ]
[e ( _Lcd_Write_String (1 -> :s 22C `*uc ]
[; ;main.c: 328: break;
"328
[e $U 309  ]
[; ;main.c: 329: case 2: Lcd_Write_String("MON");
"329
[e :U 312 ]
[e ( _Lcd_Write_String (1 -> :s 23C `*uc ]
[; ;main.c: 330: break;
"330
[e $U 309  ]
[; ;main.c: 331: case 3: Lcd_Write_String("TUE");
"331
[e :U 313 ]
[e ( _Lcd_Write_String (1 -> :s 24C `*uc ]
[; ;main.c: 332: break;
"332
[e $U 309  ]
[; ;main.c: 333: case 4: Lcd_Write_String("WES");
"333
[e :U 314 ]
[e ( _Lcd_Write_String (1 -> :s 25C `*uc ]
[; ;main.c: 334: break;
"334
[e $U 309  ]
[; ;main.c: 335: case 5: Lcd_Write_String("THU");
"335
[e :U 315 ]
[e ( _Lcd_Write_String (1 -> :s 26C `*uc ]
[; ;main.c: 336: break;
"336
[e $U 309  ]
[; ;main.c: 337: case 6: Lcd_Write_String("FRI");
"337
[e :U 316 ]
[e ( _Lcd_Write_String (1 -> :s 27C `*uc ]
[; ;main.c: 338: break;
"338
[e $U 309  ]
[; ;main.c: 339: case 7: Lcd_Write_String("SAT");
"339
[e :U 317 ]
[e ( _Lcd_Write_String (1 -> :s 28C `*uc ]
[; ;main.c: 340: break;
"340
[e $U 309  ]
[; ;main.c: 341: default: Lcd_Write_String("   ");
"341
[e :U 318 ]
[e ( _Lcd_Write_String (1 -> :s 29C `*uc ]
[; ;main.c: 342: break;
"342
[e $U 309  ]
"343
}
[; ;main.c: 343: }
[e $U 309  ]
"326
[e :U 310 ]
[e [\ % -> _day `i -> 10 `i , $ -> 1 `i 311
 , $ -> 2 `i 312
 , $ -> 3 `i 313
 , $ -> 4 `i 314
 , $ -> 5 `i 315
 , $ -> 6 `i 316
 , $ -> 7 `i 317
 318 ]
"343
[e :U 309 ]
[; ;main.c: 346: Lcd_Set_Cursor(2, 4);
"346
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 4 `i `uc ]
[; ;main.c: 347: Lcd_Write_Char(' ');
"347
[e ( _Lcd_Write_Char (1 -> -> 32 `ui `uc ]
[; ;main.c: 348: Display(date);
"348
[e ( _Display (1 _date ]
[; ;main.c: 351: Lcd_Write_Char('-');
"351
[e ( _Lcd_Write_Char (1 -> -> 45 `ui `uc ]
[; ;main.c: 352: Display(month);
"352
[e ( _Display (1 _month ]
[; ;main.c: 355: Lcd_Write_Char('-');
"355
[e ( _Lcd_Write_Char (1 -> -> 45 `ui `uc ]
[; ;main.c: 356: Display(year);
"356
[e ( _Display (1 _year ]
[; ;main.c: 359: Lcd_Set_Cursor(2, 13);
"359
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 13 `i `uc ]
[; ;main.c: 360: Lcd_Write_Char(' ');
"360
[e ( _Lcd_Write_Char (1 -> -> 32 `ui `uc ]
[; ;main.c: 361: Display(temperature);
"361
[e ( _Display (1 _temperature ]
[; ;main.c: 362: Lcd_Write_Char(67);
"362
[e ( _Lcd_Write_Char (1 -> -> 67 `i `uc ]
[; ;main.c: 363: }
"363
[e :UE 302 ]
}
"365
[v _Display_SetTime `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 365: void Display_SetTime() {
[e :U _Display_SetTime ]
[f ]
[; ;main.c: 367: if (quit == 1 && hour < 40) {
"367
[e $ ! && == -> _quit `i -> 1 `i < -> _hour `i -> 40 `i 320  ]
{
[; ;main.c: 368: Lcd_Set_Cursor(1, 1);
"368
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 369: Lcd_Write_String("CHE DO 12h?     ");
"369
[e ( _Lcd_Write_String (1 -> :s 30C `*uc ]
[; ;main.c: 370: Lcd_Set_Cursor(2, 1);
"370
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 371: Lcd_Write_String("                ");
"371
[e ( _Lcd_Write_String (1 -> :s 31C `*uc ]
"372
}
[; ;main.c: 372: } else if (quit == 1 && hour >= 40) {
[e $U 321  ]
[e :U 320 ]
[e $ ! && == -> _quit `i -> 1 `i >= -> _hour `i -> 40 `i 322  ]
{
[; ;main.c: 373: Lcd_Set_Cursor(1, 1);
"373
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 374: Lcd_Write_String("CHE DO 24h?     ");
"374
[e ( _Lcd_Write_String (1 -> :s 32C `*uc ]
[; ;main.c: 375: Lcd_Set_Cursor(2, 1);
"375
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 376: Lcd_Write_String("                ");
"376
[e ( _Lcd_Write_String (1 -> :s 33C `*uc ]
"378
}
[; ;main.c: 378: } else if (quit == 2) {
[e $U 323  ]
[e :U 322 ]
[e $ ! == -> _quit `i -> 2 `i 324  ]
{
[; ;main.c: 379: Lcd_Set_Cursor(1, 1);
"379
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 380: switch (set) {
"380
[e $U 326  ]
{
[; ;main.c: 381: case 0:
"381
[e :U 327 ]
[; ;main.c: 382: {
"382
{
[; ;main.c: 383: Lcd_Write_String("CHINH SUA?      ");
"383
[e ( _Lcd_Write_String (1 -> :s 34C `*uc ]
[; ;main.c: 384: Lcd_Set_Cursor(2, 1);
"384
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 385: Lcd_Write_String("                ");
"385
[e ( _Lcd_Write_String (1 -> :s 35C `*uc ]
[; ;main.c: 386: break;
"386
[e $U 325  ]
"387
}
[; ;main.c: 387: }
[; ;main.c: 388: case 1:
"388
[e :U 328 ]
[; ;main.c: 389: {
"389
{
[; ;main.c: 390: Lcd_Write_String("CHINH SUA      ");
"390
[e ( _Lcd_Write_String (1 -> :s 36C `*uc ]
[; ;main.c: 391: Lcd_Set_Cursor(2, 1);
"391
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 392: Lcd_Write_String("PHUT: ");
"392
[e ( _Lcd_Write_String (1 -> :s 37C `*uc ]
[; ;main.c: 393: Display(minute);
"393
[e ( _Display (1 _minute ]
[; ;main.c: 394: break;
"394
[e $U 325  ]
"395
}
[; ;main.c: 395: }
[; ;main.c: 396: case 2:
"396
[e :U 329 ]
[; ;main.c: 397: {
"397
{
[; ;main.c: 398: Lcd_Write_String("CHINH SUA      ");
"398
[e ( _Lcd_Write_String (1 -> :s 38C `*uc ]
[; ;main.c: 399: Lcd_Set_Cursor(2, 1);
"399
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 400: Lcd_Write_String("GIO: ");
"400
[e ( _Lcd_Write_String (1 -> :s 39C `*uc ]
[; ;main.c: 401: Display_Hour();
"401
[e ( _Display_Hour ..  ]
[; ;main.c: 402: Display(hour_display);
"402
[e ( _Display (1 _hour_display ]
[; ;main.c: 404: if (hour < 40) Lcd_Write_String("   ");
"404
[e $ ! < -> _hour `i -> 40 `i 330  ]
[e ( _Lcd_Write_String (1 -> :s 40C `*uc ]
[e $U 331  ]
"405
[e :U 330 ]
[; ;main.c: 405: else if (hour < 60) Lcd_Write_String(" AM");
[e $ ! < -> _hour `i -> 60 `i 332  ]
[e ( _Lcd_Write_String (1 -> :s 41C `*uc ]
[e $U 333  ]
"406
[e :U 332 ]
[; ;main.c: 406: else Lcd_Write_String(" PM");
[e ( _Lcd_Write_String (1 -> :s 42C `*uc ]
[e :U 333 ]
[e :U 331 ]
[; ;main.c: 407: break;
"407
[e $U 325  ]
"408
}
[; ;main.c: 408: }
[; ;main.c: 409: case 3:
"409
[e :U 334 ]
[; ;main.c: 410: {
"410
{
[; ;main.c: 411: Lcd_Write_String("CHINH SUA      ");
"411
[e ( _Lcd_Write_String (1 -> :s 43C `*uc ]
[; ;main.c: 412: Lcd_Set_Cursor(2, 1);
"412
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 413: Lcd_Write_String("THU: ");
"413
[e ( _Lcd_Write_String (1 -> :s 44C `*uc ]
[; ;main.c: 415: switch (day % 10) {
"415
[e $U 336  ]
{
[; ;main.c: 416: case 1: Lcd_Write_String("SUN");
"416
[e :U 337 ]
[e ( _Lcd_Write_String (1 -> :s 45C `*uc ]
[; ;main.c: 417: break;
"417
[e $U 335  ]
[; ;main.c: 418: case 2: Lcd_Write_String("MON");
"418
[e :U 338 ]
[e ( _Lcd_Write_String (1 -> :s 46C `*uc ]
[; ;main.c: 419: break;
"419
[e $U 335  ]
[; ;main.c: 420: case 3: Lcd_Write_String("TUE");
"420
[e :U 339 ]
[e ( _Lcd_Write_String (1 -> :s 47C `*uc ]
[; ;main.c: 421: break;
"421
[e $U 335  ]
[; ;main.c: 422: case 4: Lcd_Write_String("WES");
"422
[e :U 340 ]
[e ( _Lcd_Write_String (1 -> :s 48C `*uc ]
[; ;main.c: 423: break;
"423
[e $U 335  ]
[; ;main.c: 424: case 5: Lcd_Write_String("THU");
"424
[e :U 341 ]
[e ( _Lcd_Write_String (1 -> :s 49C `*uc ]
[; ;main.c: 425: break;
"425
[e $U 335  ]
[; ;main.c: 426: case 6: Lcd_Write_String("FRI");
"426
[e :U 342 ]
[e ( _Lcd_Write_String (1 -> :s 50C `*uc ]
[; ;main.c: 427: break;
"427
[e $U 335  ]
[; ;main.c: 428: case 7: Lcd_Write_String("SAT");
"428
[e :U 343 ]
[e ( _Lcd_Write_String (1 -> :s 51C `*uc ]
[; ;main.c: 429: break;
"429
[e $U 335  ]
[; ;main.c: 430: default: Lcd_Write_String("   ");
"430
[e :U 344 ]
[e ( _Lcd_Write_String (1 -> :s 52C `*uc ]
[; ;main.c: 431: break;
"431
[e $U 335  ]
"432
}
[; ;main.c: 432: }
[e $U 335  ]
"415
[e :U 336 ]
[e [\ % -> _day `i -> 10 `i , $ -> 1 `i 337
 , $ -> 2 `i 338
 , $ -> 3 `i 339
 , $ -> 4 `i 340
 , $ -> 5 `i 341
 , $ -> 6 `i 342
 , $ -> 7 `i 343
 344 ]
"432
[e :U 335 ]
[; ;main.c: 433: Lcd_Write_String("   ");
"433
[e ( _Lcd_Write_String (1 -> :s 53C `*uc ]
[; ;main.c: 434: break;
"434
[e $U 325  ]
"435
}
[; ;main.c: 435: }
[; ;main.c: 436: case 4:
"436
[e :U 345 ]
[; ;main.c: 437: {
"437
{
[; ;main.c: 438: Lcd_Write_String("CHINH SUA      ");
"438
[e ( _Lcd_Write_String (1 -> :s 54C `*uc ]
[; ;main.c: 439: Lcd_Set_Cursor(2, 1);
"439
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 440: Lcd_Write_String("NGAY: ");
"440
[e ( _Lcd_Write_String (1 -> :s 55C `*uc ]
[; ;main.c: 441: Display(date);
"441
[e ( _Display (1 _date ]
[; ;main.c: 442: break;
"442
[e $U 325  ]
"443
}
[; ;main.c: 443: }
[; ;main.c: 444: case 5:
"444
[e :U 346 ]
[; ;main.c: 445: {
"445
{
[; ;main.c: 446: Lcd_Write_String("CHINH SUA      ");
"446
[e ( _Lcd_Write_String (1 -> :s 56C `*uc ]
[; ;main.c: 447: Lcd_Set_Cursor(2, 1);
"447
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 448: Lcd_Write_String("THANG: ");
"448
[e ( _Lcd_Write_String (1 -> :s 57C `*uc ]
[; ;main.c: 449: Display(month);
"449
[e ( _Display (1 _month ]
[; ;main.c: 450: break;
"450
[e $U 325  ]
"451
}
[; ;main.c: 451: }
[; ;main.c: 452: case 6:
"452
[e :U 347 ]
[; ;main.c: 453: {
"453
{
[; ;main.c: 454: Lcd_Write_String("CHINH SUA      ");
"454
[e ( _Lcd_Write_String (1 -> :s 58C `*uc ]
[; ;main.c: 455: Lcd_Set_Cursor(2, 1);
"455
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 456: Lcd_Write_String("NAM: ");
"456
[e ( _Lcd_Write_String (1 -> :s 59C `*uc ]
[; ;main.c: 457: Lcd_Write_Char(0x32);
"457
[e ( _Lcd_Write_Char (1 -> -> 50 `i `uc ]
[; ;main.c: 458: Lcd_Write_Char(0x30);
"458
[e ( _Lcd_Write_Char (1 -> -> 48 `i `uc ]
[; ;main.c: 459: Display(year);
"459
[e ( _Display (1 _year ]
[; ;main.c: 461: break;
"461
[e $U 325  ]
"462
}
"463
}
[; ;main.c: 462: }
[; ;main.c: 463: }
[e $U 325  ]
"380
[e :U 326 ]
[e [\ _set , $ -> -> 0 `i `uc 327
 , $ -> -> 1 `i `uc 328
 , $ -> -> 2 `i `uc 329
 , $ -> -> 3 `i `uc 334
 , $ -> -> 4 `i `uc 345
 , $ -> -> 5 `i `uc 346
 , $ -> -> 6 `i `uc 347
 325 ]
"463
[e :U 325 ]
"465
}
[e :U 324 ]
"466
[e :U 323 ]
[e :U 321 ]
[; ;main.c: 465: }
[; ;main.c: 466: }
[e :UE 319 ]
}
[v F1890 `(v ~T0 @X0 1 tf ]
"471
[v _ISR `IF1890 ~T0 @X0 1 e ]
{
[; ;main.c: 471: void interrupt ISR() {
[e :U _ISR ]
[f ]
[; ;main.c: 473: if (RBIF) {
"473
[e $ ! _RBIF 349  ]
{
[; ;main.c: 475: if (RB1 == 0 && mode != 1) {
"475
[e $ ! && == -> _RB1 `i -> 0 `i != -> _mode `i -> 1 `i 350  ]
{
[; ;main.c: 476: mode = 2;
"476
[e = _mode -> -> 2 `i `uc ]
[; ;main.c: 477: quit++;
"477
[e ++ _quit -> -> 1 `i `uc ]
[; ;main.c: 478: set = 1;
"478
[e = _set -> -> 1 `i `uc ]
[; ;main.c: 479: if (minute == minute_alarm && hour == hour_alarm && alarm) {
"479
[e $ ! && && == -> _minute `i -> _minute_alarm `i == -> _hour `i -> _hour_alarm `i != -> _alarm `i -> -> -> 0 `i `uc `i 351  ]
{
[; ;main.c: 480: alarm = 0;
"480
[e = _alarm -> -> 0 `i `uc ]
[; ;main.c: 481: mode = 0;
"481
[e = _mode -> -> 0 `i `uc ]
[; ;main.c: 482: set = 0;
"482
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 483: quit = 0;
"483
[e = _quit -> -> 0 `i `uc ]
"484
}
[; ;main.c: 484: } else if (quit == 2) {
[e $U 352  ]
[e :U 351 ]
[e $ ! == -> _quit `i -> 2 `i 353  ]
{
[; ;main.c: 485: set = 0;
"485
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 486: quit = 0;
"486
[e = _quit -> -> 0 `i `uc ]
[; ;main.c: 487: mode = 0;
"487
[e = _mode -> -> 0 `i `uc ]
"488
}
[e :U 353 ]
"489
[e :U 352 ]
[; ;main.c: 488: }
[; ;main.c: 489: if (mode == 0) Read_FullTime();
[e $ ! == -> _mode `i -> 0 `i 354  ]
[e ( _Read_FullTime ..  ]
[e :U 354 ]
"490
}
[e :U 350 ]
[; ;main.c: 490: }
[; ;main.c: 492: if (RB4 == 0 && mode != 0) {
"492
[e $ ! && == -> _RB4 `i -> 0 `i != -> _mode `i -> 0 `i 355  ]
{
[; ;main.c: 493: set++;
"493
[e ++ _set -> -> 1 `i `uc ]
[; ;main.c: 494: if (mode == 2) {
"494
[e $ ! == -> _mode `i -> 2 `i 356  ]
{
[; ;main.c: 495: if (alarm) {
"495
[e $ ! != -> _alarm `i -> -> -> 0 `i `uc `i 357  ]
{
[; ;main.c: 496: quit = 0;
"496
[e = _quit -> -> 0 `i `uc ]
[; ;main.c: 497: alarm = 0;
"497
[e = _alarm -> -> 0 `i `uc ]
[; ;main.c: 498: mode = 0;
"498
[e = _mode -> -> 0 `i `uc ]
[; ;main.c: 499: set = 0;
"499
[e = _set -> -> 0 `i `uc ]
"500
}
[; ;main.c: 500: } else if (set == 3) {
[e $U 358  ]
[e :U 357 ]
[e $ ! == -> _set `i -> 3 `i 359  ]
{
[; ;main.c: 501: quit = 0;
"501
[e = _quit -> -> 0 `i `uc ]
[; ;main.c: 502: set = 0;
"502
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 503: mode = 0;
"503
[e = _mode -> -> 0 `i `uc ]
[; ;main.c: 504: alarm = 1;
"504
[e = _alarm -> -> 1 `i `uc ]
"505
}
[e :U 359 ]
"506
[e :U 358 ]
}
[; ;main.c: 505: }
[; ;main.c: 506: } else if (quit == 2 && set == 7) {
[e $U 360  ]
[e :U 356 ]
[e $ ! && == -> _quit `i -> 2 `i == -> _set `i -> 7 `i 361  ]
{
[; ;main.c: 507: set = 0;
"507
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 508: mode = 0;
"508
[e = _mode -> -> 0 `i `uc ]
[; ;main.c: 509: quit = 0;
"509
[e = _quit -> -> 0 `i `uc ]
"510
}
[; ;main.c: 510: } else if (quit == 1) {
[e $U 362  ]
[e :U 361 ]
[e $ ! == -> _quit `i -> 1 `i 363  ]
{
[; ;main.c: 511: set = 0;
"511
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 512: Change_Mode12h();
"512
[e ( _Change_Mode12h ..  ]
[; ;main.c: 513: DS1307_Write(0x02, hour);
"513
[e ( _DS1307_Write (2 , -> -> 2 `i `uc _hour ]
"514
}
[e :U 363 ]
"515
[e :U 362 ]
[e :U 360 ]
[; ;main.c: 514: }
[; ;main.c: 515: if (mode == 0) Read_FullTime();
[e $ ! == -> _mode `i -> 0 `i 364  ]
[e ( _Read_FullTime ..  ]
[e :U 364 ]
"516
}
[e :U 355 ]
[; ;main.c: 516: }
[; ;main.c: 518: if (RB5 == 0 && mode != 2) {
"518
[e $ ! && == -> _RB5 `i -> 0 `i != -> _mode `i -> 2 `i 365  ]
{
[; ;main.c: 519: mode = 1;
"519
[e = _mode -> -> 1 `i `uc ]
[; ;main.c: 520: quit++;
"520
[e ++ _quit -> -> 1 `i `uc ]
[; ;main.c: 521: set = 0;
"521
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 522: if (quit == 3) {
"522
[e $ ! == -> _quit `i -> 3 `i 366  ]
{
[; ;main.c: 523: quit = 0;
"523
[e = _quit -> -> 0 `i `uc ]
[; ;main.c: 524: mode = 0;
"524
[e = _mode -> -> 0 `i `uc ]
"525
}
[e :U 366 ]
[; ;main.c: 525: }
[; ;main.c: 526: if (mode == 0) Read_FullTime();
"526
[e $ ! == -> _mode `i -> 0 `i 367  ]
[e ( _Read_FullTime ..  ]
[e :U 367 ]
"527
}
[e :U 365 ]
[; ;main.c: 527: }
[; ;main.c: 529: if (RB2 == 0) {
"529
[e $ ! == -> _RB2 `i -> 0 `i 368  ]
{
[; ;main.c: 530: if (mode == 1 && quit == 2) {
"530
[e $ ! && == -> _mode `i -> 1 `i == -> _quit `i -> 2 `i 369  ]
{
[; ;main.c: 531: switch (set) {
"531
[e $U 371  ]
{
[; ;main.c: 532: case 1: minute++;
"532
[e :U 372 ]
[e ++ _minute -> -> 1 `i `uc ]
[; ;main.c: 533: Write_Min();
"533
[e ( _Write_Min ..  ]
[; ;main.c: 534: break;
"534
[e $U 370  ]
[; ;main.c: 535: case 2: hour++;
"535
[e :U 373 ]
[e ++ _hour -> -> 1 `i `uc ]
[; ;main.c: 536: Write_Hour();
"536
[e ( _Write_Hour ..  ]
[; ;main.c: 537: break;
"537
[e $U 370  ]
[; ;main.c: 538: case 3: day++;
"538
[e :U 374 ]
[e ++ _day -> -> 1 `i `uc ]
[; ;main.c: 539: break;
"539
[e $U 370  ]
[; ;main.c: 540: case 4: date++;
"540
[e :U 375 ]
[e ++ _date -> -> 1 `i `uc ]
[; ;main.c: 541: break;
"541
[e $U 370  ]
[; ;main.c: 542: case 5: month++;
"542
[e :U 376 ]
[e ++ _month -> -> 1 `i `uc ]
[; ;main.c: 543: break;
"543
[e $U 370  ]
[; ;main.c: 544: case 6: year++;
"544
[e :U 377 ]
[e ++ _year -> -> 1 `i `uc ]
[; ;main.c: 545: break;
"545
[e $U 370  ]
"546
}
[; ;main.c: 546: }
[e $U 370  ]
"531
[e :U 371 ]
[e [\ _set , $ -> -> 1 `i `uc 372
 , $ -> -> 2 `i `uc 373
 , $ -> -> 3 `i `uc 374
 , $ -> -> 4 `i `uc 375
 , $ -> -> 5 `i `uc 376
 , $ -> -> 6 `i `uc 377
 370 ]
"546
[e :U 370 ]
[; ;main.c: 547: Write_Time();
"547
[e ( _Write_Time ..  ]
"548
}
[; ;main.c: 548: } else if (mode == 2) {
[e $U 378  ]
[e :U 369 ]
[e $ ! == -> _mode `i -> 2 `i 379  ]
{
[; ;main.c: 549: switch (set) {
"549
[e $U 381  ]
{
[; ;main.c: 550: case 1: hour_alarm++;
"550
[e :U 382 ]
[e ++ _hour_alarm -> -> 1 `i `uc ]
[; ;main.c: 551: break;
"551
[e $U 380  ]
[; ;main.c: 552: case 2: minute_alarm++;
"552
[e :U 383 ]
[e ++ _minute_alarm -> -> 1 `i `uc ]
[; ;main.c: 553: break;
"553
[e $U 380  ]
"554
}
[; ;main.c: 554: }
[e $U 380  ]
"549
[e :U 381 ]
[e [\ _set , $ -> -> 1 `i `uc 382
 , $ -> -> 2 `i `uc 383
 380 ]
"554
[e :U 380 ]
[; ;main.c: 555: Fix_Alarm();
"555
[e ( _Fix_Alarm ..  ]
"556
}
[e :U 379 ]
"557
[e :U 378 ]
}
[e :U 368 ]
[; ;main.c: 556: }
[; ;main.c: 557: }
[; ;main.c: 559: if (RB3 == 0) {
"559
[e $ ! == -> _RB3 `i -> 0 `i 384  ]
{
[; ;main.c: 560: if (mode == 1 && quit == 2) {
"560
[e $ ! && == -> _mode `i -> 1 `i == -> _quit `i -> 2 `i 385  ]
{
[; ;main.c: 561: switch (set) {
"561
[e $U 387  ]
{
[; ;main.c: 562: case 1: minute--;
"562
[e :U 388 ]
[e -- _minute -> -> 1 `i `uc ]
[; ;main.c: 563: Write_Min();
"563
[e ( _Write_Min ..  ]
[; ;main.c: 564: break;
"564
[e $U 386  ]
[; ;main.c: 565: case 2: hour--;
"565
[e :U 389 ]
[e -- _hour -> -> 1 `i `uc ]
[; ;main.c: 566: Write_Hour();
"566
[e ( _Write_Hour ..  ]
[; ;main.c: 567: break;
"567
[e $U 386  ]
[; ;main.c: 568: case 3: day--;
"568
[e :U 390 ]
[e -- _day -> -> 1 `i `uc ]
[; ;main.c: 569: break;
"569
[e $U 386  ]
[; ;main.c: 570: case 4: date--;
"570
[e :U 391 ]
[e -- _date -> -> 1 `i `uc ]
[; ;main.c: 571: break;
"571
[e $U 386  ]
[; ;main.c: 572: case 5: month--;
"572
[e :U 392 ]
[e -- _month -> -> 1 `i `uc ]
[; ;main.c: 573: break;
"573
[e $U 386  ]
[; ;main.c: 574: case 6: year--;
"574
[e :U 393 ]
[e -- _year -> -> 1 `i `uc ]
[; ;main.c: 575: break;
"575
[e $U 386  ]
"576
}
[; ;main.c: 576: }
[e $U 386  ]
"561
[e :U 387 ]
[e [\ _set , $ -> -> 1 `i `uc 388
 , $ -> -> 2 `i `uc 389
 , $ -> -> 3 `i `uc 390
 , $ -> -> 4 `i `uc 391
 , $ -> -> 5 `i `uc 392
 , $ -> -> 6 `i `uc 393
 386 ]
"576
[e :U 386 ]
[; ;main.c: 577: Write_Time();
"577
[e ( _Write_Time ..  ]
"578
}
[; ;main.c: 578: } else if (mode == 2) {
[e $U 394  ]
[e :U 385 ]
[e $ ! == -> _mode `i -> 2 `i 395  ]
{
[; ;main.c: 579: switch (set) {
"579
[e $U 397  ]
{
[; ;main.c: 580: case 1: hour_alarm--;
"580
[e :U 398 ]
[e -- _hour_alarm -> -> 1 `i `uc ]
[; ;main.c: 581: break;
"581
[e $U 396  ]
[; ;main.c: 582: case 2: minute_alarm--;
"582
[e :U 399 ]
[e -- _minute_alarm -> -> 1 `i `uc ]
[; ;main.c: 583: break;
"583
[e $U 396  ]
"584
}
[; ;main.c: 584: }
[e $U 396  ]
"579
[e :U 397 ]
[e [\ _set , $ -> -> 1 `i `uc 398
 , $ -> -> 2 `i `uc 399
 396 ]
"584
[e :U 396 ]
[; ;main.c: 585: Fix_Alarm();
"585
[e ( _Fix_Alarm ..  ]
"586
}
[e :U 395 ]
"587
[e :U 394 ]
}
[e :U 384 ]
[; ;main.c: 586: }
[; ;main.c: 587: }
[; ;main.c: 588: INTCONbits.RBIF = 0;
"588
[e = . . _INTCONbits 0 0 -> -> 0 `i `uc ]
"589
}
[e :U 349 ]
[; ;main.c: 589: }
[; ;main.c: 590: if (INTCONbits.T0IF) {
"590
[e $ ! != -> . . _INTCONbits 0 2 `i -> -> -> 0 `i `Vuc `i 400  ]
{
[; ;main.c: 591: count++;
"591
[e ++ _count -> -> 1 `i `uc ]
[; ;main.c: 592: if (count > 120 && mode == 0) {
"592
[e $ ! && > -> _count `i -> 120 `i == -> _mode `i -> 0 `i 401  ]
{
[; ;main.c: 593: Read_Time();
"593
[e ( _Read_Time ..  ]
[; ;main.c: 594: Read_Tem();
"594
[e ( _Read_Tem ..  ]
[; ;main.c: 595: count = 0;
"595
[e = _count -> -> 0 `i `uc ]
"596
}
[e :U 401 ]
[; ;main.c: 596: }
[; ;main.c: 597: INTCONbits.T0IF = 0;
"597
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 598: TMR0 = 6;
"598
[e = _TMR0 -> -> 6 `i `uc ]
"599
}
[e :U 400 ]
[; ;main.c: 599: }
[; ;main.c: 600: }
"600
[e :UE 348 ]
}
"602
[v _main `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 602: int main() {
[e :U _main ]
[f ]
[; ;main.c: 603: TRISD = 0;
"603
[e = _TRISD -> -> 0 `i `uc ]
[; ;main.c: 604: PORTD = 0;
"604
[e = _PORTD -> -> 0 `i `uc ]
[; ;main.c: 605: TRISB = 0xFF;
"605
[e = _TRISB -> -> 255 `i `uc ]
[; ;main.c: 606: ANSEL = 0x00;
"606
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 607: ANSELH = 0x00;
"607
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 609: TRISA1 = 1;
"609
[e = _TRISA1 -> -> 1 `i `b ]
[; ;main.c: 610: ANSELbits.ANS1 = 1;
"610
[e = . . _ANSELbits 0 1 -> -> 1 `i `uc ]
[; ;main.c: 611: ADCON1 = 0x80;
"611
[e = _ADCON1 -> -> 128 `i `uc ]
[; ;main.c: 612: ADCON0 = 0x45;
"612
[e = _ADCON0 -> -> 69 `i `uc ]
[; ;main.c: 614: count = 0;
"614
[e = _count -> -> 0 `i `uc ]
[; ;main.c: 615: set = 0;
"615
[e = _set -> -> 0 `i `uc ]
[; ;main.c: 616: mode = 0;
"616
[e = _mode -> -> 0 `i `uc ]
[; ;main.c: 617: quit = 0;
"617
[e = _quit -> -> 0 `i `uc ]
[; ;main.c: 618: voltage = 0;
"618
[e = _voltage -> -> 0 `i `f ]
[; ;main.c: 619: ADCvalue = 0;
"619
[e = _ADCvalue -> -> 0 `i `f ]
[; ;main.c: 620: day_alarm = 2;
"620
[e = _day_alarm -> -> 2 `i `uc ]
[; ;main.c: 621: hour_alarm = 00;
"621
[e = _hour_alarm -> -> 0 `i `uc ]
[; ;main.c: 622: minute_alarm = 55;
"622
[e = _minute_alarm -> -> 55 `i `uc ]
[; ;main.c: 624: OPTION_REGbits.nRBPU = 0;
"624
[e = . . _OPTION_REGbits 0 5 -> -> 0 `i `uc ]
[; ;main.c: 625: WPUBbits.WPUB = 0xFF;
"625
[e = . . _WPUBbits 0 0 -> -> 255 `i `uc ]
[; ;main.c: 626: INTCONbits.GIE = 1;
"626
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
[; ;main.c: 627: INTCONbits.RBIE = 1;
"627
[e = . . _INTCONbits 0 3 -> -> 1 `i `uc ]
[; ;main.c: 628: IOCBbits.IOCB = 0xFF;
"628
[e = . . _IOCBbits 0 0 -> -> 255 `i `uc ]
[; ;main.c: 629: INTCONbits.RBIF = 0;
"629
[e = . . _INTCONbits 0 0 -> -> 0 `i `uc ]
[; ;main.c: 631: OPTION_REGbits.T0CS = 0;
"631
[e = . . _OPTION_REGbits 0 3 -> -> 0 `i `uc ]
[; ;main.c: 632: INTCONbits.T0IF = 0;
"632
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
[; ;main.c: 633: PSA = 0;
"633
[e = _PSA -> -> 0 `i `b ]
[; ;main.c: 634: OPTION_REGbits.PS = 0b010;
"634
[e = . . _OPTION_REGbits 0 0 -> -> 2 `i `uc ]
[; ;main.c: 635: INTCONbits.T0IE = 1;
"635
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
[; ;main.c: 636: TMR0 = 6;
"636
[e = _TMR0 -> -> 6 `i `uc ]
[; ;main.c: 638: i2c_Init();
"638
[e ( _i2c_Init ..  ]
[; ;main.c: 639: Lcd_Init();
"639
[e ( _Lcd_Init ..  ]
[; ;main.c: 641: Read_FullTime();
"641
[e ( _Read_FullTime ..  ]
[; ;main.c: 643: Lcd_Set_Cursor(1, 1);
"643
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 644: Lcd_Write_String("     HELLO      ");
"644
[e ( _Lcd_Write_String (1 -> :s 60C `*uc ]
[; ;main.c: 645: Lcd_Set_Cursor(2, 1);
"645
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 646: Lcd_Write_String(" GROUP 01 VXL!  ");
"646
[e ( _Lcd_Write_String (1 -> :s 61C `*uc ]
[; ;main.c: 647: _delay((unsigned long)((1000)*(1000000/4000.0)));
"647
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000.0 `ul ]
[; ;main.c: 650: while (1) {
"650
[e :U 404 ]
{
[; ;main.c: 652: _delay((unsigned long)((20)*(1000000/4000.0)));
"652
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 1000000 `l `d .4000.0 `ul ]
[; ;main.c: 653: if (minute == minute_alarm && hour == hour_alarm && alarm)
"653
[e $ ! && && == -> _minute `i -> _minute_alarm `i == -> _hour `i -> _hour_alarm `i != -> _alarm `i -> -> -> 0 `i `uc `i 406  ]
[; ;main.c: 654: RD0 = 1;
"654
[e = _RD0 -> -> 1 `i `b ]
[e $U 407  ]
"655
[e :U 406 ]
[; ;main.c: 655: else RD0 = 0;
[e = _RD0 -> -> 0 `i `b ]
[e :U 407 ]
[; ;main.c: 656: if (mode == 1) {
"656
[e $ ! == -> _mode `i -> 1 `i 408  ]
{
[; ;main.c: 657: Display_SetTime();
"657
[e ( _Display_SetTime ..  ]
"658
}
[; ;main.c: 658: } else if (mode == 2) {
[e $U 409  ]
[e :U 408 ]
[e $ ! == -> _mode `i -> 2 `i 410  ]
{
[; ;main.c: 659: Display_Alarm();
"659
[e ( _Display_Alarm ..  ]
"660
}
[; ;main.c: 660: } else Display_Time();
[e $U 411  ]
[e :U 410 ]
[e ( _Display_Time ..  ]
[e :U 411 ]
[e :U 409 ]
"661
}
[e :U 403 ]
"650
[e $U 404  ]
[e :U 405 ]
[; ;main.c: 661: }
[; ;main.c: 662: return (0);
"662
[e ) -> 0 `i ]
[e $UE 402  ]
[; ;main.c: 663: }
"663
[e :UE 402 ]
}
[a 26C 84 72 85 0 ]
[a 49C 84 72 85 0 ]
[a 28C 83 65 84 0 ]
[a 51C 83 65 84 0 ]
[a 25C 87 69 83 0 ]
[a 48C 87 69 83 0 ]
[a 22C 83 85 78 0 ]
[a 45C 83 85 78 0 ]
[a 23C 77 79 78 0 ]
[a 46C 77 79 78 0 ]
[a 3C 32 80 77 0 ]
[a 7C 32 80 77 0 ]
[a 13C 32 80 77 0 ]
[a 21C 32 80 77 0 ]
[a 42C 32 80 77 0 ]
[a 2C 32 65 77 0 ]
[a 6C 32 65 77 0 ]
[a 12C 32 65 77 0 ]
[a 20C 32 65 77 0 ]
[a 41C 32 65 77 0 ]
[a 27C 70 82 73 0 ]
[a 50C 70 82 73 0 ]
[a 24C 84 85 69 0 ]
[a 47C 84 85 69 0 ]
[a 17C 65 76 77 32 0 ]
[a 55C 78 71 65 89 58 32 0 ]
[a 44C 84 72 85 58 32 0 ]
[a 14C 80 72 85 84 58 32 0 ]
[a 37C 80 72 85 84 58 32 0 ]
[a 10C 71 73 79 58 32 0 ]
[a 39C 71 73 79 58 32 0 ]
[a 59C 78 65 77 58 32 0 ]
[a 57C 84 72 65 78 71 58 32 0 ]
[a 61C 32 71 82 79 85 80 32 48 49 32 86 88 76 33 32 32 0 ]
[a 4C 88 79 65 32 72 69 78 32 71 73 79 63 32 32 32 32 0 ]
[a 32C 67 72 69 32 68 79 32 50 52 104 63 32 32 32 32 32 0 ]
[a 30C 67 72 69 32 68 79 32 49 50 104 63 32 32 32 32 32 0 ]
[a 60C 32 32 32 32 32 72 69 76 76 79 32 32 32 32 32 32 0 ]
[a 36C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 38C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 43C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 54C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 56C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 58C 67 72 73 78 72 32 83 85 65 32 32 32 32 32 32 0 ]
[a 34C 67 72 73 78 72 32 83 85 65 63 32 32 32 32 32 32 0 ]
[a 9C 72 69 78 32 71 73 79 32 32 32 32 32 32 32 32 32 0 ]
[a 31C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 33C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 35C 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 8C 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 16C 32 32 32 32 32 32 0 ]
[a 18C 32 32 32 32 0 ]
[a 1C 32 32 32 0 ]
[a 5C 32 32 32 0 ]
[a 11C 32 32 32 0 ]
[a 19C 32 32 32 0 ]
[a 29C 32 32 32 0 ]
[a 40C 32 32 32 0 ]
[a 52C 32 32 32 0 ]
[a 53C 32 32 32 0 ]
[a 15C 32 32 0 ]
